<?xml version="1.0"?><st-source><component-created><name>TP_FINAL_PARADIGMAS</name> <type>package</type></component-created><class><name>Persona</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>id dni celular domicilio email nacimiento sexo nombre </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>Persona</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="id">id	^id</body></methods><methods><class-id>Persona</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="id:">id: anObject	id := anObject</body></methods><methods><class-id>Persona</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="dni">dni	^dni</body></methods><methods><class-id>Persona</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="dni:">dni: anObject	dni := anObject</body></methods><methods><class-id>Persona</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="celular">celular	^celular</body></methods><methods><class-id>Persona</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="celular:">celular: anObject	celular := anObject</body></methods><methods><class-id>Persona</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="domicilio">domicilio	^domicilio</body></methods><methods><class-id>Persona</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="domicilio:">domicilio: anObject	domicilio := anObject</body></methods><methods><class-id>Persona</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="email">email	^email</body></methods><methods><class-id>Persona</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="email:">email: anObject	email := anObject</body></methods><methods><class-id>Persona</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="nacimiento">nacimiento	^nacimiento</body></methods><methods><class-id>Persona</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="nacimiento:">nacimiento: anObject	nacimiento := anObject</body></methods><methods><class-id>Persona</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="sexo">sexo	^sexo</body></methods><methods><class-id>Persona</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="sexo:">sexo: anObject	sexo := anObject</body></methods><methods><class-id>Persona</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="nombre">nombre	^nombre</body></methods><methods><class-id>Persona</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="nombre:">nombre: anObject	nombre := anObject</body></methods><methods><class-id>Persona</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	id := nil.	dni := nil.	celular := nil.	domicilio := nil.	email := nil.	nacimiento := nil.	sexo := nil.	nombre := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>Persona class</class-id> <category>instance creation</category><body package="TP_FINAL_PARADIGMAS" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><class><name>Reserva</name><environment>Smalltalk</environment><super>Persona</super><private>false</private><indexed-type>none</indexed-type><inst-vars>idPersonaQueReserva idReserva listaPasajesIda listaPasajesVuelta monto pago </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idPersonaQueReserva">idPersonaQueReserva	^idPersonaQueReserva</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idPersonaQueReserva:">idPersonaQueReserva: anObject	idPersonaQueReserva := anObject</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idReserva">idReserva	^idReserva</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idReserva:">idReserva: anObject	idReserva := anObject</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="listaPasajesIda">listaPasajesIda	^listaPasajesIda</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="listaPasajesIda:">listaPasajesIda: anObject	listaPasajesIda := anObject</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="listaPasajesVuelta">listaPasajesVuelta	^listaPasajesVuelta</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="listaPasajesVuelta:">listaPasajesVuelta: anObject	listaPasajesVuelta := anObject</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="monto">monto	^monto</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="monto:">monto: anObject	monto := anObject</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="pago">pago	^pago</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="pago:">pago: anObject	pago := anObject</body></methods><methods><class-id>Reserva</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	idPersonaQueReserva := nil.	idReserva := nil.	listaPasajesIda := nil.	listaPasajesVuelta := nil.	monto := nil.	pago := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>Reserva</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	idPersonaQueReserva := nil.	idReserva := nil.	listaPasajesIda := OrderedCollection new.	listaPasajesVuelta := OrderedCollection new.	monto := nil.	pago := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>Reserva</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>Reserva</staticKey> <definitionChange>added</definitionChange></component_static_change><do-it>Reserva removeFromSystem</do-it><comment><class-id>Persona</class-id><body>Persona has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.Instance Variables:	celular	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	celular de la persona	dni	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	documento de la persona	domicilio	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	domicilio de la persona	email	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	email de la persona	id	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	id de la persona	nacimiento	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	fecha de nacimiento de la persona	nombre	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	nombre de la persona	sexo	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	sexo de la persona</body></comment><class><name>ADMPasajes</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>ADMPasajes</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Replace this comment with the appropriate initialization code *** "	^self</body></methods><methods><class-id>ADMPasajes class</class-id> <category>instance creation</category><body package="TP_FINAL_PARADIGMAS" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>ADMPasajes</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>ADMPasajes</staticKey> <definitionChange>added</definitionChange></component_static_change><do-it>ADMPasajes removeFromSystem</do-it><class><name>ADMPasajes</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aviones pasajes personas reservas vuelos pagos </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>ADMPasajes</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	aviones := nil.	pasajes := nil.	personas := nil.	reservas := nil.	vuelos := nil.	pagos := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>ADMPasajes class</class-id> <category>instance creation</category><body package="TP_FINAL_PARADIGMAS" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><methods><class-id>ADMPasajes</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	aviones := OrderedCollection new.	pasajes := OrderedCollection new.	personas := OrderedCollection new.	reservas := OrderedCollection new.	vuelos := OrderedCollection new.	pagos := OrderedCollection new.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><comment><class-id>ADMPasajes</class-id><body>ADMPasajes has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.Instance Variables:	aviones	&lt;OrderedCollection&gt;	lista de aviones	pagos	&lt;OrderedCollection&gt;	lista de pagos	pasajes	&lt;OrderedCollection&gt;	lista de pasajes	personas	&lt;OrderedCollection&gt;	lista de personas	reservas	&lt;OrderedCollection&gt;	lista de reservas	vuelos	&lt;OrderedCollection&gt;	lista de vuelos</body></comment><class><name>Asiento</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>Asiento</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Replace this comment with the appropriate initialization code *** "	^self</body></methods><methods><class-id>Asiento class</class-id> <category>instance creation</category><body package="TP_FINAL_PARADIGMAS" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>Asiento</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>Asiento</staticKey> <definitionChange>added</definitionChange></component_static_change><do-it>Asiento removeFromSystem</do-it><class><name>Asiento</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>id tipo </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>Asiento</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="id">id	^id</body></methods><methods><class-id>Asiento</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="id:">id: anObject	id := anObject</body></methods><methods><class-id>Asiento</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="tipo">tipo	^tipo</body></methods><methods><class-id>Asiento</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="tipo:">tipo: anObject	tipo := anObject</body></methods><methods><class-id>Asiento</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	id := nil.	tipo := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>Asiento class</class-id> <category>instance creation</category><body package="TP_FINAL_PARADIGMAS" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><comment><class-id>Asiento</class-id><body>Asiento has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.Instance Variables:	id	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	identificador del asiento	tipo	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	tipo de asiento</body></comment><class><name>Avion</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>id listaAsientos </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="id">id	^id</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="id:">id: anObject	id := anObject</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="listaAsientos">listaAsientos	^listaAsientos</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="listaAsientos:">listaAsientos: anObject	listaAsientos := anObject</body></methods><methods><class-id>Avion</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	id := nil.	listaAsientos := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>Avion class</class-id> <category>instance creation</category><body package="TP_FINAL_PARADIGMAS" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><methods><class-id>Avion</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	id := nil.	listaAsientos := OrderedCollection new.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><comment><class-id>Avion</class-id><body>Avion has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.Instance Variables:	id	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	identificador del avion	listaAsientos	&lt;OrderedCollection&gt;	lista de asientos del avion</body></comment><class><name>Pago</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>id montoPagado formaDePago cbuTransferencia idTarjeta cantidadCuotas </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>Pago</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="id">id	^id</body></methods><methods><class-id>Pago</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="id:">id: anObject	id := anObject</body></methods><methods><class-id>Pago</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="montoPagado">montoPagado	^montoPagado</body></methods><methods><class-id>Pago</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="montoPagado:">montoPagado: anObject	montoPagado := anObject</body></methods><methods><class-id>Pago</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="formaDePago">formaDePago	^formaDePago</body></methods><methods><class-id>Pago</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="formaDePago:">formaDePago: anObject	formaDePago := anObject</body></methods><methods><class-id>Pago</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="cbuTransferencia">cbuTransferencia	^cbuTransferencia</body></methods><methods><class-id>Pago</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="cbuTransferencia:">cbuTransferencia: anObject	cbuTransferencia := anObject</body></methods><methods><class-id>Pago</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idTarjeta">idTarjeta	^idTarjeta</body></methods><methods><class-id>Pago</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idTarjeta:">idTarjeta: anObject	idTarjeta := anObject</body></methods><methods><class-id>Pago</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="cantidadCuotas">cantidadCuotas	^cantidadCuotas</body></methods><methods><class-id>Pago</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="cantidadCuotas:">cantidadCuotas: anObject	cantidadCuotas := anObject</body></methods><methods><class-id>Pago</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	id := nil.	montoPagado := nil.	formaDePago := nil.	cbuTransferencia := nil.	idTarjeta := nil.	cantidadCuotas := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>Pago class</class-id> <category>instance creation</category><body package="TP_FINAL_PARADIGMAS" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><comment><class-id>Pago</class-id><body>Pago has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.Instance Variables:	cantidadCuotas	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	cantidad de cuotas en la cual se hizo el pago	cbuTransferencia	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	cbu de la transferencia	formaDePago	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	forma de pago	id	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	identificador del pago	idTarjeta	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of idTarjeta	montoPagado	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of montoPagado</body></comment><comment><class-id>Pago</class-id><body>Pago has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.Instance Variables:	cantidadCuotas	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	cantidad de cuotas en la cual se hizo el pago	cbuTransferencia	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	cbu de la transferencia	formaDePago	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	forma de pago	id	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	identificador del pago	idTarjeta	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	identificador de la tarjeta con la que se hizo el pago	montoPagado	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	monto pagado</body></comment><class><name>Pasaje</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>id idVuelo idAsiento idPersona </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>Pasaje</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="id">id	^id</body></methods><methods><class-id>Pasaje</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="id:">id: anObject	id := anObject</body></methods><methods><class-id>Pasaje</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idVuelo">idVuelo	^idVuelo</body></methods><methods><class-id>Pasaje</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idVuelo:">idVuelo: anObject	idVuelo := anObject</body></methods><methods><class-id>Pasaje</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idAsiento">idAsiento	^idAsiento</body></methods><methods><class-id>Pasaje</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idAsiento:">idAsiento: anObject	idAsiento := anObject</body></methods><methods><class-id>Pasaje</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idPersona">idPersona	^idPersona</body></methods><methods><class-id>Pasaje</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idPersona:">idPersona: anObject	idPersona := anObject</body></methods><methods><class-id>Pasaje</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	id := nil.	idVuelo := nil.	idAsiento := nil.	idPersona := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>Pasaje class</class-id> <category>instance creation</category><body package="TP_FINAL_PARADIGMAS" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><comment><class-id>Pasaje</class-id><body>Pasaje has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.Instance Variables:	id	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of id	idAsiento	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of idAsiento	idPersona	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of idPersona	idVuelo	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of idVuelo</body></comment><methods><class-id>Pasaje</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	id := 0.	idPersona :=0.	idVuelo := 0.	idAsiento := 0.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>Pago</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	id := 0.	montoPagado := 0.	formaDePago := ''.	cbuTransferencia := 0.	idTarjeta := 0.	cantidadCuotas := 0.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><class><name>Reserva</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>id idPersona listaPasajesIda listaPasajesVuelta monto pago </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="id">id	^id</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="id:">id: anObject	id := anObject</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idPersona">idPersona	^idPersona</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idPersona:">idPersona: anObject	idPersona := anObject</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="listaPasajesIda">listaPasajesIda	^listaPasajesIda</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="listaPasajesIda:">listaPasajesIda: anObject	listaPasajesIda := anObject</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="listaPasajesVuelta">listaPasajesVuelta	^listaPasajesVuelta</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="listaPasajesVuelta:">listaPasajesVuelta: anObject	listaPasajesVuelta := anObject</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="monto">monto	^monto</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="monto:">monto: anObject	monto := anObject</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="pago">pago	^pago</body></methods><methods><class-id>Reserva</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="pago:">pago: anObject	pago := anObject</body></methods><methods><class-id>Reserva</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	id := nil.	idPersona := nil.	listaPasajesIda := nil.	listaPasajesVuelta := nil.	monto := nil.	pago := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>Reserva class</class-id> <category>instance creation</category><body package="TP_FINAL_PARADIGMAS" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><comment><class-id>Reserva</class-id><body>Reserva has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.Instance Variables:	id	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of id	idPersona	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of idPersona	listaPasajesIda	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of listaPasajesIda	listaPasajesVuelta	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of listaPasajesVuelta	monto	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of monto	pago	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of pago</body></comment><methods><class-id>Reserva</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	id := nil.	idPersona := nil.	listaPasajesIda := OrderedCollection new.	listaPasajesVuelta := OrderedCollection new.	monto := nil.	pago := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><class><name>TarjetaCredito</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>id numero idPersona vencimiento codigoSeguridad tipo listaIntereses </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>TarjetaCredito</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="id">id	^id</body></methods><methods><class-id>TarjetaCredito</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="id:">id: anObject	id := anObject</body></methods><methods><class-id>TarjetaCredito</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="numero">numero	^numero</body></methods><methods><class-id>TarjetaCredito</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="numero:">numero: anObject	numero := anObject</body></methods><methods><class-id>TarjetaCredito</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idPersona">idPersona	^idPersona</body></methods><methods><class-id>TarjetaCredito</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idPersona:">idPersona: anObject	idPersona := anObject</body></methods><methods><class-id>TarjetaCredito</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="vencimiento">vencimiento	^vencimiento</body></methods><methods><class-id>TarjetaCredito</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="vencimiento:">vencimiento: anObject	vencimiento := anObject</body></methods><methods><class-id>TarjetaCredito</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="codigoSeguridad">codigoSeguridad	^codigoSeguridad</body></methods><methods><class-id>TarjetaCredito</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="codigoSeguridad:">codigoSeguridad: anObject	codigoSeguridad := anObject</body></methods><methods><class-id>TarjetaCredito</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="tipo">tipo	^tipo</body></methods><methods><class-id>TarjetaCredito</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="tipo:">tipo: anObject	tipo := anObject</body></methods><methods><class-id>TarjetaCredito</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="listaIntereses">listaIntereses	^listaIntereses</body></methods><methods><class-id>TarjetaCredito</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="listaIntereses:">listaIntereses: anObject	listaIntereses := anObject</body></methods><methods><class-id>TarjetaCredito</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	id := nil.	numero := nil.	idPersona := nil.	vencimiento := nil.	codigoSeguridad := nil.	tipo := nil.	listaIntereses := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>TarjetaCredito class</class-id> <category>instance creation</category><body package="TP_FINAL_PARADIGMAS" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><comment><class-id>TarjetaCredito</class-id><body>TarjetaCredito has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.Instance Variables:	codigoSeguridad	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of codigoSeguridad	id	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of id	idPersona	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of idPersona	listaIntereses	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of listaIntereses	numero	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of numero	tipo	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of tipo	vencimiento	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of vencimiento</body></comment><class><name>Vuelo</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>id idAvion idPersonaPiloto ciudadSalida ciudadLlegada fechaSalida horaSalida fechaEstimadaLlegada horaEstimadaLlegada </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="id">id	^id</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="id:">id: anObject	id := anObject</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idAvion">idAvion	^idAvion</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idAvion:">idAvion: anObject	idAvion := anObject</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idPersonaPiloto">idPersonaPiloto	^idPersonaPiloto</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idPersonaPiloto:">idPersonaPiloto: anObject	idPersonaPiloto := anObject</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="ciudadSalida">ciudadSalida	^ciudadSalida</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="ciudadSalida:">ciudadSalida: anObject	ciudadSalida := anObject</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="ciudadLlegada">ciudadLlegada	^ciudadLlegada</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="ciudadLlegada:">ciudadLlegada: anObject	ciudadLlegada := anObject</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="fechaSalida">fechaSalida	^fechaSalida</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="fechaSalida:">fechaSalida: anObject	fechaSalida := anObject</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="horaSalida">horaSalida	^horaSalida</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="horaSalida:">horaSalida: anObject	horaSalida := anObject</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="fechaEstimadaLlegada">fechaEstimadaLlegada	^fechaEstimadaLlegada</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="fechaEstimadaLlegada:">fechaEstimadaLlegada: anObject	fechaEstimadaLlegada := anObject</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="horaEstimadaLlegada">horaEstimadaLlegada	^horaEstimadaLlegada</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="horaEstimadaLlegada:">horaEstimadaLlegada: anObject	horaEstimadaLlegada := anObject</body></methods><methods><class-id>Vuelo</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	id := nil.	idAvion := nil.	idPersonaPiloto := nil.	ciudadSalida := nil.	ciudadLlegada := nil.	fechaSalida := nil.	horaSalida := nil.	fechaEstimadaLlegada := nil.	horaEstimadaLlegada := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>Vuelo class</class-id> <category>instance creation</category><body package="TP_FINAL_PARADIGMAS" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><methods><class-id>Vuelo</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	id := 0.	idAvion := 0.	idPersonaPiloto := 0.	ciudadSalida := ''.	ciudadLlegada := ''.	fechaSalida := Date.	horaSalida := ''.	fechaEstimadaLlegada := Date.	horaEstimadaLlegada := ''.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><comment><class-id>Vuelo</class-id><body>Vuelo has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.Instance Variables:	ciudadLlegada	&lt;String&gt;	description of ciudadLlegada	ciudadSalida	&lt;String&gt;	description of ciudadSalida	fechaEstimadaLlegada	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of fechaEstimadaLlegada	fechaSalida	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	description of fechaSalida	horaEstimadaLlegada	&lt;String&gt;	description of horaEstimadaLlegada	horaSalida	&lt;String&gt;	description of horaSalida	id	&lt;SmallInteger&gt;	description of id	idAvion	&lt;SmallInteger&gt;	description of idAvion	idPersonaPiloto	&lt;SmallInteger&gt;	description of idPersonaPiloto</body></comment><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'June 23, 2024' '2:28:14 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 14:28:14 on 23 de junio de 2024."</do-it><component-property><name>TP_FINAL_PARADIGMAS</name> <type>package</type><property>comment</property> <value>'This object has not been commented.'</value></component-property><do-it>ADMPasajes organization addCategory: #aviones</do-it><methods><class-id>ADMPasajes</class-id> <category>aviones</category><body package="TP_FINAL_PARADIGMAS" selector="agregarAvion:">agregarAvion:unAvionaviones add: unAvion</body></methods><do-it>ADMPasajes organization addCategory: #consultas</do-it><methods><class-id>ADMPasajes</class-id> <category>consultas</category><body package="TP_FINAL_PARADIGMAS" selector="cantidadVuelosEntre:y:">cantidadVuelosEntre:fecha1 y:fecha2	| cantidadVuelos |	cantidadVuelos:=vuelos select: [:vuelo | vuelo fechaSalida between: fecha1 and: fecha2].	^cantidadVuelos size</body></methods><methods><class-id>ADMPasajes</class-id> <category>consultas</category><body package="TP_FINAL_PARADIGMAS" selector="cantidadVuelosEntre:y:destino:">cantidadVuelosEntre:fecha1 y:fecha2 destino:destino   | cantidad |	cantidad:=vuelos select: [:vuelo | (vuelo fechaSalida between: fecha1 and: fecha2) and: [vuelo ciudadLlegada=destino]].	^cantidad size.</body></methods><methods><class-id>ADMPasajes</class-id> <category>consultas</category><body package="TP_FINAL_PARADIGMAS" selector="consultaPasaje:">consultaPasaje:idPasaje		| pasaje vueloPasaje  |	pasaje:=pasajes detect: [:pas | pas idPasaje = idPasaje].			vueloPasaje:=vuelos detect: [:v | v idVuelo = pasaje idVuelo].	^vueloPasaje fechaLlegada_horaLlegada_fechaSalida_horaSalida_idAvion</body></methods><methods><class-id>ADMPasajes</class-id> <category>consultas</category><body package="TP_FINAL_PARADIGMAS" selector="consultaPasaje:">consultaPasaje:idPasaje		| pasaje vueloPasaje  |	pasaje:=pasajes detect: [:pas | pas id = idPasaje].			vueloPasaje:=vuelos detect: [:v | v idVuelo = pasaje idVuelo].	^vueloPasaje fechaLlegada_horaLlegada_fechaSalida_horaSalida_idAvion</body></methods><methods><class-id>Vuelo</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="fechaLlegada_horaLlegada_fechaSalida_horaSalida_idAvion">fechaLlegada_horaLlegada_fechaSalida_horaSalida_idAvion| informacionVuelo |informacionVuelo:='idVuelo=',id printString,' ciudadSalida=',ciudadSalida,' ciudadLlegada=', ciudadLlegada,' horaSalida=', horaSalida,' horaLlegadaEstimada=', horaEstimadaLlegada.    ^informacionVuelo</body></methods><methods><class-id>ADMPasajes</class-id> <category>consultas</category><body package="TP_FINAL_PARADIGMAS" selector="destinoMasConcurridoEntre:y:">destinoMasConcurridoEntre:fecha1 y:fecha2| vuelosTotales vueloTotalesEntre2Fechas destinos |destinos := Dictionary new.vuelosTotales := OrderedCollection new.pasajes do: [:pasaje |     vuelos do: [:vuelo |         (vuelo idVuelo = pasaje idVuelo) ifTrue: [vuelosTotales add: vuelo]    ]].vueloTotalesEntre2Fechas := vuelosTotales select: [:vuelo |     vuelo fechaSalida between: fecha1 and: fecha2].vueloTotalesEntre2Fechas do: [:vuelo |     | ciudad |    ciudad := vuelo ciudadLlegada.    (destinos includesKey: ciudad)         ifTrue: [destinos at: ciudad put: (destinos at: ciudad) + 1]        ifFalse: [destinos at: ciudad put: 1]].^destinos.</body></methods><methods><class-id>ADMPasajes</class-id> <category>consultas</category><body package="TP_FINAL_PARADIGMAS" selector="fecha1:destino:">fecha1:fecha1 destino:unDestino	| listaVuelos |	listaVuelos:=vuelos select: [:vuelo | (vuelo fechaSalida=fecha1) &amp; (vuelo ciudadLlegada=unDestino)] .	^listaVuelos</body></methods><methods><class-id>ADMPasajes</class-id> <category>consultas</category><body package="TP_FINAL_PARADIGMAS" selector="viajantesVuelo:">viajantesVuelo: idVuelo| pasajesVuelo  resultadoFinal|pasajesVuelo:=pasajes select: [:pasaje | pasaje idVuelo = idVuelo].resultadoFinal:= pasajesVuelo collect: [:pasaje | personas detect: [:persona | persona idPersona = pasaje idPersona]].^resultadoFinal</body></methods><methods><class-id>ADMPasajes</class-id> <category>consultas</category><body package="TP_FINAL_PARADIGMAS" selector="vuelosHacia:desde:entre:y:">vuelosHacia: destino desde: salida entre:fecha1 y:fecha2| vuelosDestino |vuelosDestino:= vuelos select: [:vuel | vuel ciudadLlegada=destino &amp; (vuel ciudadSalida=salida ) &amp; (vuel fechaSalida between: fecha1 and:fecha2) ]. ^vuelosDestino collect: [:vuel| vuel fechaLlegada_horaLlegada_fechaSalida_horaSalida_idAvion ]</body></methods><do-it>ADMPasajes organization addCategory: #pagos</do-it><methods><class-id>ADMPasajes</class-id> <category>pagos</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarPago:">eliminarPago: idPagopagos removeAllSuchThat: [:v|v idPago = idPago]</body></methods><methods><class-id>ADMPasajes</class-id> <category>pagos</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarPago:">eliminarPago: idPagopagos removeAllSuchThat: [:v|v id = idPago]</body></methods><methods><class-id>ADMPasajes</class-id> <category>pagos</category><body package="TP_FINAL_PARADIGMAS" selector="modificarPago:por:">modificarPago:idPago por:unPagounPago id: idPago.pagos removeAllSuchThat: [:v| v id = idPago].pagos add:unPago</body></methods><do-it>ADMPasajes organization addCategory: #pasajes</do-it><methods><class-id>ADMPasajes</class-id> <category>pasajes</category><body package="TP_FINAL_PARADIGMAS" selector="agregarPasaje:">agregarPasaje:unPasajepersonas detect:[:persona | persona idPersona = unPasaje idPersona] ifFound:[vuelos detect: [:vuelo | vuelo idVuelo = unPasaje idVuelo] ifFound: [pasajes add: unPasaje] ifNone: [^'No puede agregar un pasaje a un vuelo que no existe']]ifNone: [^'No puede agregar un pasaje a un pasajero que no existe'].</body></methods><methods><class-id>ADMPasajes</class-id> <category>pasajes</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarPasaje:">eliminarPasaje: idPasajepasajes removeAllSuchThat: [:v|v idPasaje = idPasaje]</body></methods><methods><class-id>ADMPasajes</class-id> <category>pasajes</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarPasaje:">eliminarPasaje: idPasajepasajes removeAllSuchThat: [:v|v id = idPasaje]</body></methods><do-it>ADMPasajes organization addCategory: #personas</do-it><do-it>ADMPasajes organization addCategory: #reservas</do-it><do-it>ADMPasajes organization addCategory: #vuelos</do-it><methods><class-id>ADMPasajes</class-id> <category>personas</category><body package="TP_FINAL_PARADIGMAS" selector="agregarPersona:">agregarPersona: unaPersona      (personas size=0 ) ifTrue: [unaPersona idPersona: 1] ifFalse: [unaPersona idPersona: personas last idPersona +1].	personas add: unaPersona</body></methods><do-it>ADMPasajes organization addCategory: #pasaje</do-it><methods><class-id>ADMPasajes</class-id> <category>pasaje</category><body package="TP_FINAL_PARADIGMAS" selector="modificarPasajes:por:">modificarPasajes:idPasaje por:unPasajeunPasaje id: idPasaje.pasajes removeAllSuchThat: [:v| v id = idPasaje].pasajes add:unPasaje</body></methods><remove-selector><class-id>ADMPasajes</class-id> <selector>modificarPasajes:por:</selector></remove-selector><do-it>ADMPasajes organization removeCategory: #pasaje</do-it><methods><class-id>ADMPasajes</class-id> <category>pasajes</category><body package="TP_FINAL_PARADIGMAS" selector="modificarPasajes:por:">modificarPasajes:idPasaje por:unPasajeunPasaje idPasaje: idPasaje.pasajes removeAllSuchThat: [:v| v idPasaje = idPasaje].pasajes add:unPasaje</body></methods><methods><class-id>ADMPasajes</class-id> <category>reservas</category><body package="TP_FINAL_PARADIGMAS" selector="agregarReserva:">agregarReserva:unaReservareservas add:unaReserva</body></methods><methods><class-id>ADMPasajes</class-id> <category>reservas</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarReserva:">eliminarReserva: idReservareservas removeAllSuchThat: [:v|v idReserva = idReserva]</body></methods><methods><class-id>ADMPasajes</class-id> <category>reservas</category><body package="TP_FINAL_PARADIGMAS" selector="modificarReserva:por:">modificarReserva:idReserva por:unaReservaunaReserva idReserva: idReserva.reservas removeAllSuchThat: [:v| v idReserva = idReserva].reservas add:unaReserva</body></methods><methods><class-id>ADMPasajes</class-id> <category>vuelos</category><body package="TP_FINAL_PARADIGMAS" selector="agregarVuelo:">agregarVuelo:unVueloaviones detect: [:avion | avion idAvion = unVuelo idAvion] ifFound: [vuelos add: unVuelo] ifNone: [^'No puede agregar un vuelo a un avion que no existe'].</body></methods><methods><class-id>ADMPasajes</class-id> <category>vuelos</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarVuelo:">eliminarVuelo: idVuelovuelos removeAllSuchThat: [:v|v idVuelo = idVuelo]</body></methods><methods><class-id>ADMPasajes</class-id> <category>vuelos</category><body package="TP_FINAL_PARADIGMAS" selector="modificarVuelo:por:">modificarVuelo:idVuelo por:unVuelounVuelo idVuelo: idVuelo.vuelos removeAllSuchThat: [:v| v idVuelo = idVuelo].vuelos add:unVuelo</body></methods><class><name>Pago</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>id montoPagado formaDePago cbuTransferencia idTarjeta cantidadCuotas idReserva </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><initialize><class-id>Pago</class-id></initialize><methods><class-id>Pago</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idReserva">idReserva	^idReserva</body></methods><methods><class-id>Pago</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="idReserva:">idReserva: anObject	idReserva := anObject</body></methods><methods><class-id>Pago</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	id := 0.	montoPagado := 0.	formaDePago := ''.	cbuTransferencia := 0.	idTarjeta := 0.	cantidadCuotas := 0.	idReserva:=0.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><comment><class-id>Pago</class-id><body>Pago has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.Instance Variables:	cantidadCuotas	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	cantidad de cuotas en la cual se hizo el pago	cbuTransferencia	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	cbu de la transferencia	formaDePago	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	forma de pago	id	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	identificador del pago	idTarjeta	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	identificador de la tarjeta con la que se hizo el pago	montoPagado	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	monto pagado</body></comment><comment><class-id>Pago</class-id><body>Pago has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.Instance Variables:	cantidadCuotas	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	cantidad de cuotas en la cual se hizo el pago	cbuTransferencia	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	cbu de la transferencia	formaDePago	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	forma de pago	id	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	identificador del pago	idTarjeta	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	identificador de la tarjeta con la que se hizo el pago	montoPagado	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	monto pagado	idReserva	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	id de la reserva</body></comment><do-it>p:= Persona new.

p id: 1.
p nombre: 'Juan'.
p dni: 95949114.
p email:'santiagobasso@hotmail.com'.</do-it><do-it>p2:=Persona new.

p2 id: 2.
p2 nombre: 'Pedro'.
p2 dni: 95545645.
p2 email:'pedrosalchicha123@gmail.com'. </do-it><do-it>p3:=Persona new.

p3 id: 3.
p3 nombre: 'Yaco'.
p3 dni: 959565.
p3 email:'bananaboy123@gmail.com'. </do-it><do-it>fechaSalida:= Date readFromString: '01/02/1999'.
fechaEstimadaLlegada:= Date readFromString: '01/02/2002'.</do-it><do-it>avion1:= Avion new.</do-it><do-it>avion1 id: 1.</do-it><class><name>Avion</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>id listaAsientos cantidadAsientosOcupados </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><comment><class-id>Avion</class-id><body>Avion has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.Instance Variables:	id	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	identificador del avion	listaAsientos	&lt;OrderedCollection&gt;	lista de asientos del avion	cantidadAsientosOcupados		&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	cantidad numerica de asientos ocupados</body></comment><methods><class-id>Avion</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	id := nil.	listaAsientos := OrderedCollection new.	cantidadAsientosOcupados:=0.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="cantidadAsientosOcupados">cantidadAsientosOcupados	^cantidadAsientosOcupados</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="cantidadAsientosOcupados:">cantidadAsientosOcupados: anObject	cantidadAsientosOcupados := anObject</body></methods><do-it>avion1 id: 1.
avion1 cantidadAsientosOcupados: 0.
avion1 listaAsientos: OrderedCollection new.</do-it><do-it>
vuelo1:= Vuelo new.
vuelo1 id: 1.
vuelo1 idAvion: 1.
vuelo1 idPersonaPiloto: 1.
vuelo1 ciudadLlegada: 'catamarca'.
vuelo1 ciudadSalida: 'Resistencia'.
vuelo1 fechaSalida: fechaSalida.
vuelo1 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo1 horaEstimadaLlegada: '03'.
vuelo1 horaSalida: '00'.</do-it><do-it>vuelo1:= Vuelo new.
vuelo1 id: 1.
vuelo1 idAvion: 1.
vuelo1 idPersonaPiloto: 1.
vuelo1 ciudadLlegada: 'catamarca'.
vuelo1 ciudadSalida: 'Resistencia'.
vuelo1 fechaSalida: fechaSalida.
vuelo1 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo1 horaEstimadaLlegada: '03'.
vuelo1 horaSalida: '00'.</do-it><do-it>vuelo2:= Vuelo new.
vuelo2 id: 2.
vuelo2 idAvion: 1.
vuelo2 idPersonaPiloto: 2.
vuelo2 ciudadLlegada: 'parana'.
vuelo2 ciudadSalida: 'Concepcion del Uruguay'.
vuelo2 fechaSalida: fechaSalida.
vuelo2 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo2 horaEstimadaLlegada: '06'.
vuelo2 horaSalida: '05'.

vuelo3:= Vuelo new.
vuelo3 id: 3.
vuelo3 idAvion: 1.
vuelo3 idPersonaPiloto: 2.
vuelo3 ciudadLlegada: 'parana'.
vuelo3 ciudadSalida: 'Concepcion del Uruguay'.
vuelo3 fechaSalida: fechaSalida.
vuelo3 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo3 horaEstimadaLlegada: '06'.
vuelo3 horaSalida: '05'.</do-it><do-it>
asiento1:= Asiento new.
asiento1 id: 1.
asiento1 tipo: 'economico'.</do-it><do-it>pasaje1:= Pasaje new.
pasaje1 idAsiento: 1.
pasaje1 id: 1.
pasaje1 idPersona: 1.
pasaje1 idVuelo: 1.</do-it><do-it>pasaje2:= Pasaje new.
pasaje2 idAsiento: 2.
pasaje2 id: 2.
pasaje2 idPersona: 2.
pasaje2 idVuelo: 2.

pasaje3:= Pasaje new.
pasaje3 idAsiento: 3.
pasaje3 id: 3.
pasaje3 idPersona: 3.
pasaje3 idVuelo: 1.</do-it><do-it>
pasaje2:= Pasaje new.
pasaje2 idAsiento: 2.
pasaje2 id: 2.
pasaje2 idPersona: 2.
pasaje2 idVuelo: 2.

pasaje3:= Pasaje new.
pasaje3 idAsiento: 3.
pasaje3 id: 3.
pasaje3 idPersona: 3.
pasaje3 idVuelo: 1.</do-it><do-it>pasaje4:= Pasaje new.
pasaje4 idAsiento: 3.
pasaje4 id: 4.
pasaje4 idPersona: 1.
pasaje4 idVuelo: 2.
</do-it><do-it>
adm:= ADMPasajes new. </do-it><methods><class-id>ADMPasajes</class-id> <category>personas</category><body package="TP_FINAL_PARADIGMAS" selector="agregarPersona:">agregarPersona: unaPersona      (personas size=0 ) ifTrue: [unaPersona id: 1] ifFalse: [unaPersona idPersona: personas last idPersona +1].	personas add: unaPersona</body></methods><methods><class-id>ADMPasajes</class-id> <category>personas</category><body package="TP_FINAL_PARADIGMAS" selector="agregarPersona:">agregarPersona: unaPersona      (personas size=0 ) ifTrue: [unaPersona id: 1] ifFalse: [unaPersona id: personas last idPersona +1].	personas add: unaPersona</body></methods><methods><class-id>ADMPasajes</class-id> <category>personas</category><body package="TP_FINAL_PARADIGMAS" selector="agregarPersona:">agregarPersona: unaPersona      (personas size=0 ) ifTrue: [unaPersona id: 1] ifFalse: [unaPersona id: personas last id +1].	personas add: unaPersona</body></methods><do-it>adm agregarPersona: p.
</do-it><do-it>p:= Persona new.

p id: 1.
p nombre: 'Juan'.
p dni: 95949114.
p email:'santiagobasso@hotmail.com'.

p2:=Persona new.

p2 id: 2.
p2 nombre: 'Pedro'.
p2 dni: 95545645.
p2 email:'pedrosalchicha123@gmail.com'. 


p3:=Persona new.

p3 id: 3.
p3 nombre: 'Yaco'.
p3 dni: 959565.
p3 email:'bananaboy123@gmail.com'. 

fechaSalida:= Date readFromString: '01/02/1999'.
fechaEstimadaLlegada:= Date readFromString: '01/02/2002'.</do-it><do-it>
avion1:= Avion new.
avion1 id: 1.
avion1 cantidadAsientosOcupados: 0.
avion1 listaAsientos: OrderedCollection new.


vuelo1:= Vuelo new.
vuelo1 id: 1.
vuelo1 idAvion: 1.
vuelo1 idPersonaPiloto: 1.
vuelo1 ciudadLlegada: 'catamarca'.
vuelo1 ciudadSalida: 'Resistencia'.
vuelo1 fechaSalida: fechaSalida.
vuelo1 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo1 horaEstimadaLlegada: '03'.
vuelo1 horaSalida: '00'.


vuelo2:= Vuelo new.
vuelo2 id: 2.
vuelo2 idAvion: 1.
vuelo2 idPersonaPiloto: 2.
vuelo2 ciudadLlegada: 'parana'.
vuelo2 ciudadSalida: 'Concepcion del Uruguay'.
vuelo2 fechaSalida: fechaSalida.
vuelo2 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo2 horaEstimadaLlegada: '06'.
vuelo2 horaSalida: '05'.

vuelo3:= Vuelo new.
vuelo3 id: 3.
vuelo3 idAvion: 1.
vuelo3 idPersonaPiloto: 2.
vuelo3 ciudadLlegada: 'parana'.
vuelo3 ciudadSalida: 'Concepcion del Uruguay'.
vuelo3 fechaSalida: fechaSalida.
vuelo3 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo3 horaEstimadaLlegada: '06'.
vuelo3 horaSalida: '05'.
</do-it><do-it>
asiento1:= Asiento new.
asiento1 id: 1.
asiento1 tipo: 'economico'.</do-it><do-it>

pasaje2:= Pasaje new.pasaje2 id: 2.
pasaje2 idAsiento: 2.
pasaje2 idPersona: 2.
pasaje2 idVuelo: 2.

pasaje3:= Pasaje new.pasaje3 id: 3.
pasaje3 idAsiento: 3.
pasaje3 idPersona: 3.
pasaje3 idVuelo: 1.</do-it><do-it>
pasaje4:= Pasaje new.pasaje4 id: 4.
pasaje4 idAsiento: 3.
pasaje4 idPersona: 1.
pasaje4 idVuelo: 2.</do-it><do-it>adm:= ADMPasajes new. </do-it><do-it>adm agregarPersona: p.</do-it><do-it>adm agregarPersona: p3.</do-it><do-it>adm agregarAvion: avion1.
</do-it><methods><class-id>ADMPasajes</class-id> <category>vuelos</category><body package="TP_FINAL_PARADIGMAS" selector="agregarVuelo:">agregarVuelo:unVueloaviones detect: [:avion | avion id = unVuelo id] ifFound: [vuelos add: unVuelo] ifNone: [^'No puede agregar un vuelo a un avion que no existe'].</body></methods><do-it>adm agregarVuelo: vuelo1. </do-it><do-it>adm agregarVuelo: vuelo2. 
adm agregarVuelo: vuelo3. </do-it><methods><class-id>ADMPasajes</class-id> <category>pasajes</category><body package="TP_FINAL_PARADIGMAS" selector="agregarPasaje:">agregarPasaje:unPasajepersonas detect:[:persona | persona id = unPasaje idPersona] ifFound:[vuelos detect: [:vuelo | vuelo id = unPasaje idVuelo] ifFound: [pasajes add: unPasaje] ifNone: [^'No puede agregar un pasaje a un vuelo que no existe']]ifNone: [^'No puede agregar un pasaje a un pasajero que no existe'].</body></methods><do-it>adm agregarPasaje: pasaje1.
</do-it><do-it>adm agregarPasaje: pasaje2.
</do-it><do-it>adm agregarPasaje: pasaje4.</do-it><do-it>pasaje1</do-it><do-it>pasaje1:= Pasaje new.pasaje1 id: 1.
pasaje1 idAsiento: 1.
pasaje1 idPersona: 1.
pasaje1 idVuelo: 1.
</do-it><do-it>adm agregarPasaje: pasaje1.</do-it><do-it>1</do-it><do-it>p:= Persona new.

p id: 1.
p nombre: 'Juan'.
p dni: 95949114.
p email:'santiagobasso@hotmail.com'.

p2:=Persona new.

p2 id: 2.
p2 nombre: 'Pedro'.
p2 dni: 95545645.
p2 email:'pedrosalchicha123@gmail.com'. 


p3:=Persona new.

p3 id: 3.
p3 nombre: 'Yaco'.
p3 dni: 959565.
p3 email:'bananaboy123@gmail.com'. 

fechaSalida:= Date readFromString: '01/02/1999'.
fechaEstimadaLlegada:= Date readFromString: '01/02/2002'.

avion1:= Avion new.
avion1 id: 1.
avion1 cantidadAsientosOcupados: 0.
avion1 listaAsientos: OrderedCollection new.


vuelo1:= Vuelo new.
vuelo1 id: 1.
vuelo1 idAvion: 1.
vuelo1 idPersonaPiloto: 1.
vuelo1 ciudadLlegada: 'catamarca'.
vuelo1 ciudadSalida: 'Resistencia'.
vuelo1 fechaSalida: fechaSalida.
vuelo1 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo1 horaEstimadaLlegada: '03'.
vuelo1 horaSalida: '00'.


vuelo2:= Vuelo new.
vuelo2 id: 2.
vuelo2 idAvion: 1.
vuelo2 idPersonaPiloto: 2.
vuelo2 ciudadLlegada: 'parana'.
vuelo2 ciudadSalida: 'Concepcion del Uruguay'.
vuelo2 fechaSalida: fechaSalida.
vuelo2 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo2 horaEstimadaLlegada: '06'.
vuelo2 horaSalida: '05'.

vuelo3:= Vuelo new.
vuelo3 id: 3.
vuelo3 idAvion: 1.
vuelo3 idPersonaPiloto: 2.
vuelo3 ciudadLlegada: 'parana'.
vuelo3 ciudadSalida: 'Concepcion del Uruguay'.
vuelo3 fechaSalida: fechaSalida.
vuelo3 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo3 horaEstimadaLlegada: '06'.
vuelo3 horaSalida: '05'.

asiento1:= Asiento new.
asiento1 id: 1.
asiento1 tipo: 'economico'.

pasaje1:= Pasaje new.pasaje1 id: 1.
pasaje1 idAsiento: 1.
pasaje1 idPersona: 1.
pasaje1 idVuelo: 1.

pasaje2:= Pasaje new.pasaje2 id: 2.
pasaje2 idAsiento: 2.
pasaje2 idPersona: 2.
pasaje2 idVuelo: 2.

pasaje3:= Pasaje new.pasaje3 id: 3.
pasaje3 idAsiento: 3.
pasaje3 idPersona: 3.
pasaje3 idVuelo: 1.

pasaje4:= Pasaje new.pasaje4 id: 4.
pasaje4 idAsiento: 3.
pasaje4 idPersona: 1.
pasaje4 idVuelo: 2.

adm:= ADMPasajes new. 

adm agregarPersona: p.
adm agregarPersona: p2.
adm agregarPersona: p3.

adm agregarAvion: avion1.

adm agregarVuelo: vuelo1. 
adm agregarVuelo: vuelo2. 
adm agregarVuelo: vuelo3. </do-it><do-it>p:= Persona new.

p id: 1.
p nombre: 'Juan'.
p dni: 95949114.
p email:'santiagobasso@hotmail.com'.

p2:=Persona new.

p2 id: 2.
p2 nombre: 'Pedro'.
p2 dni: 95545645.
p2 email:'pedrosalchicha123@gmail.com'. 


p3:=Persona new.

p3 id: 3.
p3 nombre: 'Yaco'.
p3 dni: 959565.
p3 email:'bananaboy123@gmail.com'. </do-it><do-it>
fechaSalida:= Date readFromString: '01/02/1999'.
fechaEstimadaLlegada:= Date readFromString: '01/02/2002'.</do-it><do-it>avion1:= Avion new.
avion1 id: 1.
avion1 cantidadAsientosOcupados: 0.
avion1 listaAsientos: OrderedCollection new.
</do-it><do-it>
vuelo1:= Vuelo new.
vuelo1 id: 1.
vuelo1 idAvion: 1.
vuelo1 idPersonaPiloto: 1.
vuelo1 ciudadLlegada: 'catamarca'.
vuelo1 ciudadSalida: 'Resistencia'.
vuelo1 fechaSalida: fechaSalida.
vuelo1 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo1 horaEstimadaLlegada: '03'.
vuelo1 horaSalida: '00'.</do-it><do-it>asiento1:= Asiento new.
asiento1 id: 1.
asiento1 tipo: 'economico'.</do-it><do-it>
pasaje1:= Pasaje new.pasaje1 id: 1.
pasaje1 idAsiento: 1.
pasaje1 idPersona: 1.
pasaje1 idVuelo: 1.</do-it><do-it>
adm:= ADMPasajes new. </do-it><do-it>adm agregarPersona: p.</do-it><do-it>adm agregarAvion: avion1.</do-it><do-it>adm agregarVuelo: vuelo1. </do-it><do-it>adm agregarPasaje: pasaje1.</do-it><methods><class-id>ADMPasajes</class-id> <category>consultas</category><body package="TP_FINAL_PARADIGMAS" selector="consultaPasaje:">consultaPasaje:idPasaje		| pasaje vueloPasaje  |	pasaje:=pasajes detect: [:pas | pas id = idPasaje].			vueloPasaje:=vuelos detect: [:v | v id = pasaje idVuelo].	^vueloPasaje fechaLlegada_horaLlegada_fechaSalida_horaSalida_idAvion</body></methods><methods><class-id>ADMPasajes</class-id> <category>consultas</category><body package="TP_FINAL_PARADIGMAS" selector="destinoMasConcurridoEntre:y:">destinoMasConcurridoEntre:fecha1 y:fecha2| vuelosTotales vueloTotalesEntre2Fechas destinos |destinos := Dictionary new.vuelosTotales := OrderedCollection new.pasajes do: [:pasaje |     vuelos do: [:vuelo |         (vuelo id = pasaje idVuelo) ifTrue: [vuelosTotales add: vuelo]    ]].vueloTotalesEntre2Fechas := vuelosTotales select: [:vuelo |     vuelo fechaSalida between: fecha1 and: fecha2].vueloTotalesEntre2Fechas do: [:vuelo |     | ciudad |    ciudad := vuelo ciudadLlegada.    (destinos includesKey: ciudad)         ifTrue: [destinos at: ciudad put: (destinos at: ciudad) + 1]        ifFalse: [destinos at: ciudad put: 1]].^destinos.</body></methods><do-it>adm destinoMasConcurridoEntre: fechaSalida y: fechaEstimadaLlegada. </do-it><class><name>VAgregarPersona</name><environment>Smalltalk</environment><super>UI.SimpleDialog</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>VAgregarPersona class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 553 426 1054 828 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 200 0 45 0 ) 					#name: #Label1 					#label: 'Id' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 189 0 79 0 ) 					#name: #Label2 					#label: 'DNI' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 0 0.329341 0 0.291045 ) 					#name: #Label3 					#label: 'Nombre' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 173 0 154 0 ) 					#name: #Label4 					#label: 'Celular' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 159 0 192 0 ) 					#name: #Label5 					#label: 'Domicilio' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 182 0 229 0 ) 					#name: #Label6 					#label: 'Email' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 183 0 266 0 ) 					#name: #Label7 					#label: 'Sexo' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 147 0 304 0 ) 					#name: #Label8 					#label: 'Nacimiento' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 44 0 325 0 65 0 ) 					#name: #InputField1 					#model: #'aspPersona id | agregar' 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 81 0 325 0 102 0 ) 					#name: #InputField2 					#model: #'aspPersona dni | agregar' 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 117 0 325 0 138 0 ) 					#name: #InputField3 					#model: #'aspPersona nombre | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 153 0 325 0 174 0 ) 					#name: #InputField4 					#model: #'aspPersona celular | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 190 0 325 0 211 0 ) 					#name: #InputField5 					#model: #'aspPersona domicilio | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 225 0 325 0 246 0 ) 					#name: #InputField6 					#model: #'aspPersona email | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 261 0 325 0 282 0 ) 					#name: #InputField7 					#model: #'aspPersona sexo | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 298 0 325 0 319 0 ) 					#name: #InputField8 					#model: #'aspPersona nacimiento | agregar' 					#type: #date 					#formatString: 'dd/mm/yyyy' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 150 0 356 0 202 0 377 0 ) 					#name: #btnAgregar 					#model: #botonAgregar 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 250 0 355 0 303 0 376 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) ) ) )</body></methods><comment><class-id>VAgregarPersona</class-id><body>VAgregarPersona has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.</body></comment><initialize><class-id>VAgregarPersona</class-id></initialize><class><name>VAgregarPersona</name><environment>Smalltalk</environment><super>UI.SimpleDialog</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspPersona agregar </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><do-it>Smalltalk defineClass: #VAgregarPersona	superclass: #{UI.SimpleDialog}	indexedType: #none	private: false	instanceVariableNames: ' aspPersona agregar '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonCancelar">botonCancelar	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VAgregarPersona</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="agregar">agregar	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^agregar isNil		ifTrue:			[agregar := nil asValue]		ifFalse:			[agregar]</body></methods><methods><class-id>VAgregarPersona</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="aspPersona">aspPersona	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^aspPersona isNil		ifTrue:			[aspPersona := nil asValue]		ifFalse:			[aspPersona]</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'June 23, 2024' '3:12:13 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 15:12:13 on 23 de junio de 2024."</do-it><methods><class-id>VAgregarPersona</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="agregar">agregar	^agregar isNil		ifTrue:			[agregar := nil asValue]		ifFalse:			[agregar]</body></methods><methods><class-id>VAgregarPersona</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="agregar">agregar	^agregar isNil		ifTrue:			[agregar := false asValue]		ifFalse:			[agregar]</body></methods><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="persona:">persona:unaPersona	aspPersona:=unaPersona</body></methods><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="persona:">persona:unaPersona	aspPersona:=unaPersona asValue</body></methods><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="persona:">persona:unaPersona	aspPersona:=unaPersona asValue.</body></methods><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="persona:">persona:unaPersona	aspPersona:=unaPersona asValue.</body></methods><do-it>VAgregarPersona organization addCategory: #aspects</do-it><do-it>VAgregarPersona classifySymbol: #persona: under: #aspects</do-it><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregaragregar value: true.</body></methods><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregaragregar value: true.self closeRequest.</body></methods><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar	agregar value: true.	self closeRequest.</body></methods><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonCancelar">botonCancelar	self closeRequest.</body></methods><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonCancelar">botonCancelar	agregar value:false.	self closeRequest.</body></methods><do-it>p:= Persona new.</do-it><do-it>v:= VAgregarPersona new.</do-it><do-it>p nombre: 'Santiago'.</do-it><do-it>v persona:p.</do-it><do-it>v open.</do-it><do-it>v open.</do-it><do-it>v open.</do-it><do-it>v persona:p.</do-it><do-it>v open.</do-it><do-it>p:= Persona new.v:= VAgregarPersona new.p nombre: 'Santiago'.v persona:p.</do-it><do-it>v open.</do-it><do-it>v open.</do-it><do-it>v:= VAgregarPersona new.p nombre: 'Santiago'.v persona:p.</do-it><do-it>v open. false</do-it><do-it>v open. </do-it><do-it>v:= VAgregarPersona new.p nombre: 'Santiago'.v persona:p.v open. </do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'June 23, 2024' '3:24:28 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 15:24:28 on 23 de junio de 2024."</do-it><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregarPersona">botonAgregarPersona	agregar value: true.	self persona nombre		ifNil: 			[Dialog warn: 'Debe ingresar el nombre de la persona.'.			agregar value: false]		ifNotNil: 			[self persona celular				ifNil: 					[Dialog warn: 'Debe ingresar el celular de la persona.'.					agregar value: false]				ifNotNil: 					[self persona dni						ifNil: 							[Dialog warn: 'Debe ingresar el DNI de la persona.'.							agregar value: false]						ifNotNil: 							[self persona domicilio								ifNil: 									[Dialog warn: 'Debe ingresar el domicilio de la persona.'.									agregar value: false]								ifNotNil: 									[self persona email										ifNil: 											[Dialog warn: 'Debe ingresar el mail de la persona.'.											agregar value: false]										ifNotNil: 											[self persona nacimiento												ifNil: 													[Dialog warn: 'Debe ingresar la fecha de nacimiento de la persona.'.													agregar value: false]												ifNotNil: 													[agregar value: true.													self closeRequest]]]]]]</body></methods><do-it>p nombre: 'Santiago'.v persona:p.v open. </do-it><do-it>v:= VAgregarPersona new.p nombre: 'Santiago'.v persona:p.v open.  false</do-it><do-it>p2:= Persona new.</do-it><do-it>v:= VAgregarPersona new.</do-it><do-it>v persona:p2.v open. </do-it><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar	agregar value: true.	self persona nombre		ifNil: 			[Dialog warn: 'Debe ingresar el nombre de la persona.'.			agregar value: false]		ifNotNil: 			[self persona celular				ifNil: 					[Dialog warn: 'Debe ingresar el celular de la persona.'.					agregar value: false]				ifNotNil: 					[self persona dni						ifNil: 							[Dialog warn: 'Debe ingresar el DNI de la persona.'.							agregar value: false]						ifNotNil: 							[self persona domicilio								ifNil: 									[Dialog warn: 'Debe ingresar el domicilio de la persona.'.									agregar value: false]								ifNotNil: 									[self persona email										ifNil: 											[Dialog warn: 'Debe ingresar el mail de la persona.'.											agregar value: false]										ifNotNil: 											[self persona nacimiento												ifNil: 													[Dialog warn: 'Debe ingresar la fecha de nacimiento de la persona.'.													agregar value: false]												ifNotNil: 													[agregar value: true.													self closeRequest]]]]]]</body></methods><remove-selector><class-id>VAgregarPersona</class-id> <selector>botonAgregarPersona</selector></remove-selector><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar	agregar value: true.	self aspPersona nombre		ifNil: 			[Dialog warn: 'Debe ingresar el nombre de la persona.'.			agregar value: false]		ifNotNil: 			[self aspPersona celular				ifNil: 					[Dialog warn: 'Debe ingresar el celular de la persona.'.					agregar value: false]				ifNotNil: 					[self aspPersona dni						ifNil: 							[Dialog warn: 'Debe ingresar el DNI de la persona.'.							agregar value: false]						ifNotNil: 							[self aspPersona domicilio								ifNil: 									[Dialog warn: 'Debe ingresar el domicilio de la persona.'.									agregar value: false]								ifNotNil: 									[self aspPersona email										ifNil: 											[Dialog warn: 'Debe ingresar el mail de la persona.'.											agregar value: false]										ifNotNil: 											[self aspPersona nacimiento												ifNil: 													[Dialog warn: 'Debe ingresar la fecha de nacimiento de la persona.'.													agregar value: false]												ifNotNil: 													[agregar value: true.													self closeRequest]]]]]]</body></methods><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAceptar">botonAceptar	agregar value:true.	self closeRequest.</body></methods><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar	agregar value:true.	self closeRequest.</body></methods><remove-selector><class-id>VAgregarPersona</class-id> <selector>botonAceptar</selector></remove-selector><do-it>p2:= Persona new.v:= VAgregarPersona new.p nombre: 'Santiago'.v persona:p2.v open. </do-it><do-it>VAgregarPersona organization addCategory: #'initialize-release'</do-it><methods><class-id>VAgregarPersona</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	| lista |	super initialize.	lista := #('Femenino' 'Masculino' 'Otro' ) asList.	self listaSexo value: lista</body></methods><methods><class-id>VAgregarPersona class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 710 319 1211 721 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 200 0 45 0 ) 					#name: #Label1 					#label: 'Id' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 189 0 79 0 ) 					#name: #Label2 					#label: 'DNI' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 0 0.329341 0 0.291045 ) 					#name: #Label3 					#label: 'Nombre' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 173 0 154 0 ) 					#name: #Label4 					#label: 'Celular' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 159 0 192 0 ) 					#name: #Label5 					#label: 'Domicilio' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 182 0 229 0 ) 					#name: #Label6 					#label: 'Email' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 183 0 266 0 ) 					#name: #Label7 					#label: 'Sexo' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 147 0 304 0 ) 					#name: #Label8 					#label: 'Nacimiento' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 44 0 325 0 65 0 ) 					#name: #InputField1 					#model: #'aspPersona id | agregar' 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 81 0 325 0 102 0 ) 					#name: #InputField2 					#model: #'aspPersona dni | agregar' 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 117 0 325 0 138 0 ) 					#name: #InputField3 					#model: #'aspPersona nombre | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 153 0 325 0 174 0 ) 					#name: #InputField4 					#model: #'aspPersona celular | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 190 0 325 0 211 0 ) 					#name: #InputField5 					#model: #'aspPersona domicilio | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 225 0 325 0 246 0 ) 					#name: #InputField6 					#model: #'aspPersona email | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 298 0 325 0 319 0 ) 					#name: #InputField8 					#model: #'aspPersona nacimiento | agregar' 					#type: #date 					#formatString: 'dd/mm/yyyy' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 150 0 356 0 202 0 377 0 ) 					#name: #btnAgregar 					#model: #botonAgregar 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 250 0 355 0 303 0 376 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) 				#(#{UI.ComboBoxSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 263 0 325 0 284 0 ) 					#name: #ComboBox1 					#comboList: #listaSexo ) ) ) )</body></methods><methods><class-id>VAgregarPersona class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 710 319 1211 721 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 200 0 45 0 ) 					#name: #Label1 					#label: 'Id' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 189 0 79 0 ) 					#name: #Label2 					#label: 'DNI' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 0 0.329341 0 0.291045 ) 					#name: #Label3 					#label: 'Nombre' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 173 0 154 0 ) 					#name: #Label4 					#label: 'Celular' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 159 0 192 0 ) 					#name: #Label5 					#label: 'Domicilio' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 182 0 229 0 ) 					#name: #Label6 					#label: 'Email' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 183 0 266 0 ) 					#name: #Label7 					#label: 'Sexo' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 147 0 304 0 ) 					#name: #Label8 					#label: 'Nacimiento' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 44 0 325 0 65 0 ) 					#name: #InputField1 					#model: #'aspPersona id | agregar' 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 81 0 325 0 102 0 ) 					#name: #InputField2 					#model: #'aspPersona dni | agregar' 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 117 0 325 0 138 0 ) 					#name: #InputField3 					#model: #'aspPersona nombre | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 153 0 325 0 174 0 ) 					#name: #InputField4 					#model: #'aspPersona celular | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 190 0 325 0 211 0 ) 					#name: #InputField5 					#model: #'aspPersona domicilio | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 225 0 325 0 246 0 ) 					#name: #InputField6 					#model: #'aspPersona email | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 298 0 325 0 319 0 ) 					#name: #InputField8 					#model: #'aspPersona nacimiento | agregar' 					#type: #date 					#formatString: 'dd/mm/yyyy' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 150 0 356 0 202 0 377 0 ) 					#name: #btnAgregar 					#model: #botonAgregar 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 250 0 355 0 303 0 376 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) 				#(#{UI.ComboBoxSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 263 0 325 0 284 0 ) 					#name: #ComboBox1 					#comboList: #listaSexo ) ) ) )</body></methods><methods><class-id>VAgregarPersona class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 710 319 1211 721 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 200 0 45 0 ) 					#name: #Label1 					#label: 'Id' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 189 0 79 0 ) 					#name: #Label2 					#label: 'DNI' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 0 0.329341 0 0.291045 ) 					#name: #Label3 					#label: 'Nombre' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 173 0 154 0 ) 					#name: #Label4 					#label: 'Celular' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 159 0 192 0 ) 					#name: #Label5 					#label: 'Domicilio' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 182 0 229 0 ) 					#name: #Label6 					#label: 'Email' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 183 0 266 0 ) 					#name: #Label7 					#label: 'Sexo' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 147 0 304 0 ) 					#name: #Label8 					#label: 'Nacimiento' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 44 0 325 0 65 0 ) 					#name: #InputField1 					#model: #'aspPersona id | agregar' 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 81 0 325 0 102 0 ) 					#name: #InputField2 					#model: #'aspPersona dni | agregar' 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 117 0 325 0 138 0 ) 					#name: #InputField3 					#model: #'aspPersona nombre | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 153 0 325 0 174 0 ) 					#name: #InputField4 					#model: #'aspPersona celular | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 190 0 325 0 211 0 ) 					#name: #InputField5 					#model: #'aspPersona domicilio | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 225 0 325 0 246 0 ) 					#name: #InputField6 					#model: #'aspPersona email | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 298 0 325 0 319 0 ) 					#name: #InputField8 					#model: #'aspPersona nacimiento | agregar' 					#type: #date 					#formatString: 'dd/mm/yyyy' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 150 0 356 0 202 0 377 0 ) 					#name: #btnAgregar 					#model: #botonAgregar 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 250 0 355 0 303 0 376 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) 				#(#{UI.ComboBoxSpec} 					#layout: #(#{Graphics.LayoutFrame} 225 0 263 0 325 0 284 0 ) 					#name: #ComboBox1 					#model: #'aspPersona sexo | agregar' 					#comboList: #listaSexo ) ) ) )</body></methods><class><name>VAgregarPersona</name><environment>Smalltalk</environment><super>UI.SimpleDialog</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspPersona agregar listaSexo </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><do-it>Smalltalk defineClass: #VAgregarPersona	superclass: #{UI.SimpleDialog}	indexedType: #none	private: false	instanceVariableNames: 'aspPersona agregar  listaSexo '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>VAgregarPersona</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="listaSexo">listaSexo	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^listaSexo isNil		ifTrue:			[listaSexo := List new asValue]		ifFalse:			[listaSexo]</body></methods><do-it>p:= Persona new.v:= VAgregarPersona new.p nombre: 'Santiago'.v persona:p.v open.  false</do-it><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregaragregar value: true.	self persona nombre		ifNil: 			[Dialog warn: 'Debe ingresar el nombre de la persona.'.			agregar value: false]		ifNotNil: 			[self persona celular				ifNil: 					[Dialog warn: 'Debe ingresar el celular de la persona.'.					agregar value: false]				ifNotNil: 					[self persona dni						ifNil: 							[Dialog warn: 'Debe ingresar el DNI de la persona.'.							agregar value: false]						ifNotNil: 							[self persona domicilio								ifNil: 									[Dialog warn: 'Debe ingresar el domicilio de la persona.'.									agregar value: false]								ifNotNil: 									[self persona email										ifNil: 											[Dialog warn: 'Debe ingresar el mail de la persona.'.											agregar value: false]										ifNotNil: 											[self persona nacimiento												ifNil: 													[Dialog warn: 'Debe ingresar la fecha de nacimiento de la persona.'.													agregar value: false]												ifNotNil: 													[agregar value: true.													self closeRequest]]]]]]</body></methods><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="persona">persona ^aspPersona value</body></methods><do-it>VAgregarPersona organization addCategory: #accessing</do-it><do-it>VAgregarPersona organization addCategory: #accessing</do-it><do-it>VAgregarPersona classifySymbol: #persona under: #accessing</do-it><do-it>p:= Persona new.v:= VAgregarPersona new.p nombre: 'Santiago'.v persona:p.v open.</do-it><methods><class-id>VAgregarPersona class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Persona' 			#bounds: #(#{Graphics.Rectangle} 710 319 1211 721 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 183 0 43 0 ) 					#name: #Label2 					#label: 'DNI' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 0 0.317365 0 0.201493 ) 					#name: #Label3 					#label: 'Nombre' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 167 0 118 0 ) 					#name: #Label4 					#label: 'Celular' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 153 0 156 0 ) 					#name: #Label5 					#label: 'Domicilio' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 176 0 193 0 ) 					#name: #Label6 					#label: 'Email' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 177 0 230 0 ) 					#name: #Label7 					#label: 'Sexo' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 141 0 268 0 ) 					#name: #Label8 					#label: 'Nacimiento' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 219 0 45 0 319 0 66 0 ) 					#name: #InputField2 					#model: #'aspPersona dni | agregar' 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 219 0 81 0 319 0 102 0 ) 					#name: #InputField3 					#model: #'aspPersona nombre | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 219 0 117 0 319 0 138 0 ) 					#name: #InputField4 					#model: #'aspPersona celular | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 219 0 154 0 319 0 175 0 ) 					#name: #InputField5 					#model: #'aspPersona domicilio | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 219 0 189 0 319 0 210 0 ) 					#name: #InputField6 					#model: #'aspPersona email | agregar' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 219 0 262 0 319 0 283 0 ) 					#name: #InputField8 					#model: #'aspPersona nacimiento | agregar' 					#type: #date 					#formatString: 'dd/mm/yyyy' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 150 0 356 0 202 0 377 0 ) 					#name: #btnAgregar 					#model: #botonAgregar 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 250 0 355 0 303 0 376 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) 				#(#{UI.ComboBoxSpec} 					#layout: #(#{Graphics.LayoutFrame} 219 0 227 0 319 0 248 0 ) 					#name: #ComboBox1 					#model: #'aspPersona sexo | agregar' 					#comboList: #listaSexo ) ) ) )</body></methods><do-it>p:= Persona new.v:= VAgregarPersona new.p nombre: 'Santiago'.v persona:p.v open. false</do-it><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregaragregar value: true.	self persona dni		ifNil: 			[Dialog warn: 'Debe ingresar el DNI de la persona.'.			agregar value: false]		ifNotNil: 			[self persona celular				ifNil: 					[Dialog warn: 'Debe ingresar el celular de la persona.'.					agregar value: false]				ifNotNil: 					[self persona dni						ifNil: 							[Dialog warn: 'Debe ingresar el DNI de la persona.'.							agregar value: false]						ifNotNil: 							[self persona domicilio								ifNil: 									[Dialog warn: 'Debe ingresar el domicilio de la persona.'.									agregar value: false]								ifNotNil: 									[self persona email										ifNil: 											[Dialog warn: 'Debe ingresar el mail de la persona.'.											agregar value: false]										ifNotNil: 											[self persona nacimiento												ifNil: 													[Dialog warn: 'Debe ingresar la fecha de nacimiento de la persona.'.													agregar value: false]												ifNotNil: 													[agregar value: true.													self closeRequest]]]]]]</body></methods><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregaragregar value: true.	self persona dni		ifNil: 			[Dialog warn: 'Debe ingresar el DNI de la persona.'.			agregar value: false]		ifNotNil: 			[self persona nombre				ifNil: 					[Dialog warn: 'Debe ingresar el nombre de la persona.'.					agregar value: false]				ifNotNil: 					[self persona dni						ifNil: 							[Dialog warn: 'Debe ingresar el DNI de la persona.'.							agregar value: false]						ifNotNil: 							[self persona domicilio								ifNil: 									[Dialog warn: 'Debe ingresar el domicilio de la persona.'.									agregar value: false]								ifNotNil: 									[self persona email										ifNil: 											[Dialog warn: 'Debe ingresar el mail de la persona.'.											agregar value: false]										ifNotNil: 											[self persona nacimiento												ifNil: 													[Dialog warn: 'Debe ingresar la fecha de nacimiento de la persona.'.													agregar value: false]												ifNotNil: 													[agregar value: true.													self closeRequest]]]]]]</body></methods><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregaragregar value: true.	self persona dni		ifNil: 			[Dialog warn: 'Debe ingresar el DNI de la persona.'.			agregar value: false]		ifNotNil: 			[self persona nombre				ifNil: 					[Dialog warn: 'Debe ingresar el nombre de la persona.'.					agregar value: false]				ifNotNil: 					[self persona celular						ifNil: 							[Dialog warn: 'Debe ingresar el celular de la persona.'.							agregar value: false]						ifNotNil: 							[self persona domicilio								ifNil: 									[Dialog warn: 'Debe ingresar el domicilio de la persona.'.									agregar value: false]								ifNotNil: 									[self persona email										ifNil: 											[Dialog warn: 'Debe ingresar el mail de la persona.'.											agregar value: false]										ifNotNil: 											[self persona nacimiento												ifNil: 													[Dialog warn: 'Debe ingresar la fecha de nacimiento de la persona.'.													agregar value: false]												ifNotNil: 													[agregar value: true.													self closeRequest]]]]]]</body></methods><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregaragregar value: true.	self persona dni		ifNil: 			[Dialog warn: 'Debe ingresar el DNI de la persona.'.			agregar value: false]		ifNotNil: 			[self persona nombre				ifNil: 					[Dialog warn: 'Debe ingresar el nombre de la persona.'.					agregar value: false]				ifNotNil: 					[self persona celular						ifNil: 							[Dialog warn: 'Debe ingresar el celular de la persona.'.							agregar value: false]						ifNotNil: 							[self persona domicilio								ifNil: 									[Dialog warn: 'Debe ingresar el domicilio de la persona.'.									agregar value: false]								ifNotNil: 									[self persona email										ifNil: 											[Dialog warn: 'Debe ingresar el mail de la persona.'.											agregar value: false]									ifNotNil: 										[self persona sexo											ifNil: 												[Dialog warn: 'Debe ingresar el mail de la persona.'.												agregar value: false]											ifNotNil: 												[self persona nacimiento													ifNil: 														[Dialog warn: 'Debe ingresar la fecha de nacimiento de la persona.'.														agregar value: false]													ifNotNil: 														[agregar value: true.														self closeRequest]]]]]]]</body></methods><methods><class-id>VAgregarPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregaragregar value: true.	self persona dni		ifNil: 			[Dialog warn: 'Debe ingresar el DNI de la persona.'.			agregar value: false]		ifNotNil: 			[self persona nombre				ifNil: 					[Dialog warn: 'Debe ingresar el nombre de la persona.'.					agregar value: false]				ifNotNil: 					[self persona celular						ifNil: 							[Dialog warn: 'Debe ingresar el celular de la persona.'.							agregar value: false]						ifNotNil: 							[self persona domicilio								ifNil: 									[Dialog warn: 'Debe ingresar el domicilio de la persona.'.									agregar value: false]								ifNotNil: 									[self persona email										ifNil: 											[Dialog warn: 'Debe ingresar el mail de la persona.'.											agregar value: false]									ifNotNil: 										[self persona sexo											ifNil: 												[Dialog warn: 'Debe ingresar el sexo de la persona.'.												agregar value: false]											ifNotNil: 												[self persona nacimiento													ifNil: 														[Dialog warn: 'Debe ingresar la fecha de nacimiento de la persona.'.														agregar value: false]													ifNotNil: 														[agregar value: true.														self closeRequest]]]]]]]</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'June 23, 2024' '3:49:09 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 15:49:09 on 23 de junio de 2024."</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'June 23, 2024' '3:49:17 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 15:49:17 on 23 de junio de 2024."</do-it><do-it>p:= Persona new.</do-it><do-it>v:= VAgregarPersona new.</do-it><do-it>v persona:p.v open. </do-it><methods><class-id>VAgregarPersona</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	| lista |	super initialize.	lista := #('Masculino' 'Femenino' 'Otro' ) asList.	self listaSexo value: lista</body></methods><do-it>v:= VAgregarPersona new.</do-it><do-it>v persona:p.v open. </do-it><class><name>VListaPersonas</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>VListaPersonas class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 879 198 1798 643 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.DataSetSpec} 					#properties: #(#{UI.PropertyListDictionary} #showHorizontalLines true #allowColumnResizing true #showVerticalLines true ) 					#layout: #(#{Graphics.LayoutFrame} 78 0 57 0 761 0 327 0 ) 					#name: #Datset1 					#model: #aspListaPersonas 					#columns: #(						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false #allowSorting true ) 							#model: #'aspPersona id' 							#label: 'ID' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false #allowSorting true ) 							#model: #'aspPersona nombre' 							#label: 'NOMBRE' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false #allowSorting true ) 							#model: #'aspPersona dni' 							#label: 'DNI' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false #allowSorting true ) 							#model: #'aspPersona nacimiento' 							#label: 'FECHA DE NACIMIENTO' 							#labelIsImage: false 							#width: 180 							#editorType: #InputField 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false #allowSorting true ) 							#model: #'aspPersona domicilio' 							#label: 'DOMICILIO' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false #allowSorting true ) 							#model: #'aspPersona email' 							#label: 'EMAIL' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false #allowSorting true ) 							#model: #'aspPersona sexo' 							#label: 'SEXO' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#noScroll: false ) ) ) ) ) )</body></methods><class><name>VListaPersonas</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspListaPersonas aspPersona </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><do-it>Smalltalk defineClass: #VListaPersonas	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: ' aspListaPersonas aspPersona '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>VListaPersonas</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="aspPersona">aspPersona	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^aspPersona isNil		ifTrue:			[aspPersona := nil asValue]		ifFalse:			[aspPersona]</body></methods><methods><class-id>VListaPersonas</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="aspListaPersonas">aspListaPersonas	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^aspListaPersonas isNil		ifTrue:			[aspListaPersonas :=  SelectionInList new.			aspListaPersonas selectionIndexHolder compute:				[:v |				self aspPersona value: aspListaPersonas selection].			aspListaPersonas]		ifFalse:			[aspListaPersonas]</body></methods><comment><class-id>VListaPersonas</class-id><body>VListaPersonas has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.Instance Variables:	aspListaPersonas	&lt;SelectionInList&gt;	description of aspListaPersonas	aspPersona	&lt;ValueModel&gt;	description of aspPersona</body></comment><methods><class-id>VListaPersonas class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 644 386 1563 831 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.DataSetSpec} 					#properties: #(#{UI.PropertyListDictionary} #showHorizontalLines true #allowColumnResizing true #allowColumnReordering false #showVerticalLines true ) 					#layout: #(#{Graphics.LayoutFrame} 78 0 57 0 761 0 327 0 ) 					#name: #Datset1 					#model: #aspListaPersonas 					#columns: #(						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona id' 							#label: 'ID' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona nombre' 							#label: 'NOMBRE' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona dni' 							#label: 'DNI' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona nacimiento' 							#label: 'FECHA DE NACIMIENTO' 							#labelIsImage: false 							#width: 180 							#editorType: #InputField 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona domicilio' 							#label: 'DOMICILIO' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona email' 							#label: 'EMAIL' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona sexo' 							#label: 'SEXO' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#noScroll: false ) ) ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 78 0 351 0 130 0 372 0 ) 					#name: #btnAgregarPersona 					#model: #botonAgregarPersona 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 486 0 351 0 538 0 372 0 ) 					#name: #btnEliminarPersona 					#model: #botonEliminarPersona 					#label: 'Eliminar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 282 0 351 0 334 0 372 0 ) 					#name: #btnModificarPersona 					#model: #botonModificarPersona 					#label: 'Modificar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 690 0 353 0 742 0 374 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) ) ) )</body></methods><class><name>VListaPersonas</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspListaPersonas aspPersona </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><do-it>Smalltalk defineClass: #VListaPersonas	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'aspListaPersonas aspPersona  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonModificarPersona">botonModificarPersona	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregarPersona">botonAgregarPersona	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminarPersona">botonEliminarPersona	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonCancelar">botonCancelar	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregarPersona">botonAgregarPersona| vAgregarPersona |	"This stub method was generated by UIDefiner"vAgregarPersona := VAgregarPersona new.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregarPersona">botonAgregarPersona| vAgregarPersona |	"This stub method was generated by UIDefiner"vAgregarPersona := VAgregarPersona new.vAgregarPersona open.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregarPersona">botonAgregarPersona| vAgregarPersona nuevaPersona|	"This stub method was generated by UIDefiner"vAgregarPersona := VAgregarPersona new.nuevaPersona := Persona new.vAgregarPersona pesona: nuevaPersona.vAgregarPersona open.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregarPersona">botonAgregarPersona| vAgregarPersona nuevaPersona|	"This stub method was generated by UIDefiner"nuevaPersona := Persona new.vAgregarPersona := VAgregarPersona new.vAgregarPersona pesona: nuevaPersona.vAgregarPersona open.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregarPersona">botonAgregarPersona| vAgregarPersona nuevaPersona|	"This stub method was generated by UIDefiner"nuevaPersona := Persona new.vAgregarPersona := VAgregarPersona new.vAgregarPersona persona: nuevaPersona.vAgregarPersona open.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregarPersona">botonAgregarPersona| vAgregarPersona nuevaPersona|	"This stub method was generated by UIDefiner"vAgregarPersona := VAgregarPersona new.nuevaPersona := Persona new.vAgregarPersona persona: nuevaPersona.vAgregarPersona open.</body></methods><do-it>v1:= VListaPersonas new.</do-it><do-it>p:= Persona new.</do-it><do-it>v:= VAgregarPersona new.</do-it><do-it>v1 open.</do-it><do-it>v1:= VListaPersonas new.</do-it><do-it>v1 open.</do-it><class><name>VListaPersonas</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspListaPersonas aspPersona adm </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><class><name>VListaPersonas</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspListaPersonas aspPersona admPersonas </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><initialize><class-id>VListaPersonas</class-id></initialize><class><name>VListaPersonas</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspListaPersonas aspPersona </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><class><name>VListaPersonas</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspListaPersonas aspPersona admPersonas </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><initialize><class-id>VListaPersonas</class-id></initialize><class><name>VMenuPrincipal</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>VMenuPrincipal class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 860 420 1285 665 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 71 0 97 0 177 0 118 0 ) 					#name: #btnAdmPersonas 					#model: #botonAdmPersonas 					#label: 'ADM PERSONAS' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 204 0 97 0 366 0 118 0 ) 					#name: #btnAdmVuelos 					#model: #botonAdmVuelos 					#label: 'ADM VUELOS' 					#defaultable: true ) ) ) )</body></methods><class><name>VMenuPrincipal</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><do-it>Smalltalk defineClass: #VMenuPrincipal	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: ' '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAdmPersonas">botonAdmPersonas	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAdmVuelos">botonAdmVuelos	"This stub method was generated by UIDefiner"	^self</body></methods><comment><class-id>VMenuPrincipal</class-id><body>VMenuPrincipal has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.</body></comment><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAdmPersonas">botonAdmPersonas	| h v listaPersonas|	listaPersonas:=OrderedCollection new.		h:=Smalltalk.Persona new.	h nombre: 'Pablo'.	h nacimiento: Date today.	h email: 'PabloMartinToscanini@gmail.com'.	h dni: 1010101010.	h celular: '098107657'.	h domicilio: 'Mariano moreno 724'.	h sexo: 'Masculino'.		listaPersonas add: h.	h:=Smalltalk.Persona new.	h nombre: 'Juan'.	h nacimiento: Date today.	h email: 'TorianJuanSilvaBurger@gmail.com'.	h dni: 95949114.	h celular: '+59898107657'.	h domicilio: 'Mariano moreno 20'.	h sexo: 'Masculino'.		listaPersonas add: h.			v:= VListaPersonas new.	v personas: listaPersonas.	v open</body></methods><methods><class-id>VListaPersonas</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="personas:">personas:listaPersonas 		self aspListaPersonas list: listaPersonas</body></methods><do-it>VListaPersonas organization addCategory: #accessing</do-it><do-it>VListaPersonas organization addCategory: #accessing</do-it><do-it>VListaPersonas classifySymbol: #personas: under: #accessing</do-it><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAdmPersonas">botonAdmPersonas	| h v listaPersonas|	listaPersonas:=OrderedCollection new.			v:= VListaPersonas new.	v personas: listaPersonas.	v open</body></methods><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAdmPersonas">botonAdmPersonas	| h v listaPersonas|	listaPersonas:=OrderedCollection new.		h:=Smalltalk.Persona new.	h nombre: 'Pablo'.	h nacimiento: Date today.	h email: 'PabloMartinToscanini@gmail.com'.	h dni: 1010101010.	h celular: '098107657'.	h domicilio: 'Mariano moreno 724'.	h sexo: 'Masculino'.		listaPersonas add: h.	h:=Smalltalk.Persona new.	h nombre: 'Juan'.	h nacimiento: Date today.	h email: 'TorianJuanSilvaBurger@gmail.com'.	h dni: 95949114.	h celular: '+59898107657'.	h domicilio: 'Mariano moreno 20'.	h sexo: 'Masculino'.		listaPersonas add: h.			v:= VListaPersonas new.	v personas: listaPersonas.	v open</body></methods><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAdmPersonas">botonAdmPersonas	| h v listaPersonas|	listaPersonas:=OrderedCollection new.		h:=Smalltalk.Persona new.	h nombre: 'Pablo'.	h nacimiento: Date today.	h email: 'PabloMartinToscanini@gmail.com'.	h dni: 1010101010.	h celular: '098107657'.	h domicilio: 'Mariano moreno 724'.	h sexo: 'Masculino'.		listaPersonas add: h.			v:= VListaPersonas new.	v personas: listaPersonas.	v open</body></methods><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAdmPersonas">botonAdmPersonas	| h v listaPersonas|	listaPersonas:=OrderedCollection new.		h:=Persona new.	h nombre: 'Pablo'.	h nacimiento: Date today.	h email: 'PabloMartinToscanini@gmail.com'.	h dni: 1010101010.	h celular: '098107657'.	h domicilio: 'Mariano moreno 724'.	h sexo: 'Masculino'.		listaPersonas add: h.			v:= VListaPersonas new.	v personas: listaPersonas.	v open</body></methods><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAdmPersonas">botonAdmPersonas	| h v listaPersonas|	listaPersonas:=OrderedCollection new.		h:=Persona new.	h nombre: 'Pablo'.	h nacimiento: Date today.	h email: 'PabloMartinToscanini@gmail.com'.	h dni: 1010101010.	h celular: '098107657'.	h domicilio: 'Mariano moreno 724'.		listaPersonas add: h.			v:= VListaPersonas new.	v personas: listaPersonas.	v open</body></methods><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAdmPersonas">botonAdmPersonas	| h v listaPersonas|	listaPersonas:=OrderedCollection new.		h:=Persona new.	h nombre: 'Pablo'.	h nacimiento: Date today.	h email: 'PabloMartinToscanini@gmail.com'.	h dni: 1010101010.	h celular: '098107657'.	h domicilio: 'Mariano moreno 724'.		listaPersonas add: h.			v:= VListaPersonas new.	v personas: listaPersonas.	v open.	self closeRequest.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonCancelar">botonCancelar	"This stub method was generated by UIDefiner"	self closeRequest.</body></methods><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAdmPersonas">botonAdmPersonas	| h v listaPersonas|	listaPersonas:=OrderedCollection new.		h:=Persona new.	h nombre: 'Pablo'.	h nacimiento: Date today.	h email: 'PabloMartinToscanini@gmail.com'.	h dni: 1010101010.	h celular: '098107657'.	h domicilio: 'Mariano moreno 724'.		listaPersonas add: h.			v:= VListaPersonas new.	v personas: listaPersonas.		self closeRequest.	v open.</body></methods><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAdmPersonas">botonAdmPersonas	| v listaPersonas|	listaPersonas:=OrderedCollection new.				v:= VListaPersonas new.	v personas: listaPersonas.	v open.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregarPersona">botonAgregarPersona| vAgregarPersona nuevaPersona|	"This stub method was generated by UIDefiner"vAgregarPersona := VAgregarPersona new.nuevaPersona := Persona new.vAgregarPersona persona: nuevaPersona.vAgregarPersona open.admPersonas agregarPersona: vAgregarPersona persona.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregarPersona">botonAgregarPersona| vAgregarPersona nuevaPersona|	"This stub method was generated by UIDefiner"vAgregarPersona := VAgregarPersona new.nuevaPersona := Persona new.vAgregarPersona persona: nuevaPersona.vAgregarPersona open.</body></methods><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAdmPersonas">botonAdmPersonas	| v listaPersonas|	listaPersonas:=OrderedCollection new.		v:= VListaPersonas new.	v personas: listaPersonas.	v open.</body></methods><methods><class-id>TarjetaCredito</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	id := nil.	numero := nil.	idPersona := nil.	vencimiento := nil.	codigoSeguridad := nil.	tipo := nil.	listaIntereses := OrderedCollection new.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'June 24, 2024' '5:55:05 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 17:55:05 on 24 de junio de 2024."</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'June 24, 2024' '5:55:07 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 17:55:07 on 24 de junio de 2024."</do-it><do-it>p:= Persona new.
</do-it><do-it>p id: 1.
p nombre: 'Juan'.
p dni: 95949114.
p email:'santiagobasso@hotmail.com'.
</do-it><do-it>
avion1:= Avion new.
avion1 id: 1.
avion1 cantidadAsientosOcupados: 0.
avion1 listaAsientos: OrderedCollection new.</do-it><do-it>p2:=Persona new.

p2 id: 2.
p2 nombre: 'Pedro'.
p2 dni: 95545645.
p2 email:'pedro123@gmail.com'. 


p3:=Persona new.

p3 id: 3.
p3 nombre: 'Yaco'.
p3 dni: 959565.
p3 email:'boy123@gmail.com'. </do-it><do-it>fechaSalida:= Date readFromString: '01/02/1999'.
fechaEstimadaLlegada:= Date readFromString: '01/02/2002'.</do-it><do-it>
avion1:= Avion new.
avion1 id: 1.
avion1 cantidadAsientosOcupados: 0.
avion1 listaAsientos: OrderedCollection new.
</do-it><do-it>

vuelo1:= Vuelo new.
vuelo1 id: 1.
vuelo1 idAvion: 1.
vuelo1 idPersonaPiloto: 1.
vuelo1 ciudadLlegada: 'catamarca'.
vuelo1 ciudadSalida: 'Resistencia'.
vuelo1 fechaSalida: fechaSalida.
vuelo1 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo1 horaEstimadaLlegada: '03'.
vuelo1 horaSalida: '00'.
</do-it><do-it>vuelo2:= Vuelo new.
vuelo2 id: 2.
vuelo2 idAvion: 1.
vuelo2 idPersonaPiloto: 2.
vuelo2 ciudadLlegada: 'parana'.
vuelo2 ciudadSalida: 'Concepcion del Uruguay'.
vuelo2 fechaSalida: fechaSalida.
vuelo2 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo2 horaEstimadaLlegada: '06'.
vuelo2 horaSalida: '05'.</do-it><do-it>vuelo3:= Vuelo new.
vuelo3 id: 3.
vuelo3 idAvion: 1.
vuelo3 idPersonaPiloto: 2.
vuelo3 ciudadLlegada: 'parana'.
vuelo3 ciudadSalida: 'Concepcion del Uruguay'.
vuelo3 fechaSalida: fechaSalida.
vuelo3 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo3 horaEstimadaLlegada: '06'.
vuelo3 horaSalida: '05'.
</do-it><do-it>
asiento1:= Asiento new.
asiento1 id: 1.
asiento1 tipo: 'economico'.</do-it><do-it>
pasaje2:= Pasaje new.pasaje2 id: 2.
pasaje2 idAsiento: 2.
pasaje2 idPersona: 2.
pasaje2 idVuelo: 2.

pasaje3:= Pasaje new.pasaje3 id: 3.
pasaje3 idAsiento: 3.
pasaje3 idPersona: 3.
pasaje3 idVuelo: 1.

pasaje4:= Pasaje new.pasaje4 id: 4.
pasaje4 idAsiento: 3.
pasaje4 idPersona: 1.
pasaje4 idVuelo: 2.</do-it><do-it>
adm:= ADMPasajes new. 
</do-it><do-it>adm agregarPersona: p.
adm agregarPersona: p2.
adm agregarPersona: p3.
</do-it><do-it>adm agregarAvion: avion1.

adm agregarVuelo: vuelo1. 
adm agregarVuelo: vuelo2. 
adm agregarVuelo: vuelo3. 
</do-it><do-it>adm agregarAvion: avion1.</do-it><do-it>
adm agregarVuelo: vuelo1. </do-it><do-it>adm agregarVuelo: vuelo2. </do-it><do-it>adm agregarVuelo: vuelo2. </do-it><do-it>adm agregarVuelo: vuelo2. </do-it><do-it>p:= Persona new.

p id: 1.
p nombre: 'Juan'.
p dni: 95949114.
p email:'santiagobasso@hotmail.com'.

p2:=Persona new.

p2 id: 2.
p2 nombre: 'Pedro'.
p2 dni: 95545645.
p2 email:'pedro123@gmail.com'. 


p3:=Persona new.

p3 id: 3.
p3 nombre: 'Yaco'.
p3 dni: 959565.
p3 email:'boy123@gmail.com'. 

fechaSalida:= Date readFromString: '01/02/1999'.
fechaEstimadaLlegada:= Date readFromString: '01/02/2002'.

avion1:= Avion new.
avion1 id: 1.
avion1 cantidadAsientosOcupados: 0.
avion1 listaAsientos: OrderedCollection new.


vuelo1:= Vuelo new.
vuelo1 id: 1.
vuelo1 idAvion: 1.
vuelo1 idPersonaPiloto: 1.
vuelo1 ciudadLlegada: 'catamarca'.
vuelo1 ciudadSalida: 'Resistencia'.
vuelo1 fechaSalida: fechaSalida.
vuelo1 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo1 horaEstimadaLlegada: '03'.
vuelo1 horaSalida: '00'.


vuelo2:= Vuelo new.
vuelo2 id: 2.
vuelo2 idAvion: 1.
vuelo2 idPersonaPiloto: 1.
vuelo2 ciudadLlegada: 'parana'.
vuelo2 ciudadSalida: 'Concepcion del Uruguay'.
vuelo2 fechaSalida: fechaSalida.
vuelo2 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo2 horaEstimadaLlegada: '06'.
vuelo2 horaSalida: '05'.

vuelo3:= Vuelo new.
vuelo3 id: 3.
vuelo3 idAvion: 1.
vuelo3 idPersonaPiloto: 1.
vuelo3 ciudadLlegada: 'parana'.
vuelo3 ciudadSalida: 'Concepcion del Uruguay'.
vuelo3 fechaSalida: fechaSalida.
vuelo3 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo3 horaEstimadaLlegada: '06'.
vuelo3 horaSalida: '05'.</do-it><do-it>p:= Persona new.

p id: 1.
p nombre: 'Juan'.
p dni: 95949114.
p email:'santiagobasso@hotmail.com'.

p2:=Persona new.

p2 id: 2.
p2 nombre: 'Pedro'.
p2 dni: 95545645.
p2 email:'pedro123@gmail.com'. 


p3:=Persona new.

p3 id: 3.
p3 nombre: 'Yaco'.
p3 dni: 959565.
p3 email:'boy123@gmail.com'. 

fechaSalida:= Date readFromString: '01/02/1999'.
fechaEstimadaLlegada:= Date readFromString: '01/02/2002'.

avion1:= Avion new.
avion1 id: 1.
avion1 cantidadAsientosOcupados: 0.
avion1 listaAsientos: OrderedCollection new.


vuelo1:= Vuelo new.
vuelo1 id: 1.
vuelo1 idAvion: 1.
vuelo1 idPersonaPiloto: 1.
vuelo1 ciudadLlegada: 'catamarca'.
vuelo1 ciudadSalida: 'Resistencia'.
vuelo1 fechaSalida: fechaSalida.
vuelo1 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo1 horaEstimadaLlegada: '03'.
vuelo1 horaSalida: '00'.


vuelo2:= Vuelo new.
vuelo2 id: 2.
vuelo2 idAvion: 1.
vuelo2 idPersonaPiloto: 1.
vuelo2 ciudadLlegada: 'parana'.
vuelo2 ciudadSalida: 'Concepcion del Uruguay'.
vuelo2 fechaSalida: fechaSalida.
vuelo2 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo2 horaEstimadaLlegada: '06'.
vuelo2 horaSalida: '05'.

vuelo3:= Vuelo new.
vuelo3 id: 3.
vuelo3 idAvion: 1.
vuelo3 idPersonaPiloto: 1.
vuelo3 ciudadLlegada: 'parana'.
vuelo3 ciudadSalida: 'Concepcion del Uruguay'.
vuelo3 fechaSalida: fechaSalida.
vuelo3 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo3 horaEstimadaLlegada: '06'.
vuelo3 horaSalida: '05'.

asiento1:= Asiento new.
asiento1 id: 1.
asiento1 tipo: 'economico'.

pasaje1:= Pasaje new.pasaje1 id: 1.
pasaje1 idAsiento: 1.
pasaje1 idPersona: 1.
pasaje1 idVuelo: 1.

pasaje2:= Pasaje new.pasaje2 id: 2.
pasaje2 idAsiento: 2.
pasaje2 idPersona: 2.
pasaje2 idVuelo: 2.

pasaje3:= Pasaje new.pasaje3 id: 3.
pasaje3 idAsiento: 3.
pasaje3 idPersona: 3.
pasaje3 idVuelo: 1.

pasaje4:= Pasaje new.pasaje4 id: 4.
pasaje4 idAsiento: 3.
pasaje4 idPersona: 1.
pasaje4 idVuelo: 2.

adm:= ADMPasajes new. </do-it><do-it>adm agregarPersona: p.</do-it><do-it>adm agregarPersona: p2.</do-it><do-it>adm agregarPersona: p3.
</do-it><do-it>
adm agregarAvion: avion1.</do-it><do-it>adm agregarVuelo: vuelo1. </do-it><do-it>adm agregarVuelo: vuelo2. </do-it><do-it>adm agregarVuelo: vuelo2. </do-it><do-it>adm agregarVuelo: vuelo2. </do-it><do-it>adm agregarVuelo: vuelo1. </do-it><do-it>adm agregarVuelo: vuelo2. </do-it><do-it>vuelo2:= Vuelo new.
vuelo2 id: 2.
vuelo2 idAvion: 1.
vuelo2 idPersonaPiloto: 1.
vuelo2 ciudadLlegada: 'catamarca'.
vuelo2 ciudadSalida: 'Resistencia'.
vuelo2 fechaSalida: fechaSalida.
vuelo2 fechaEstimadaLlegada: fechaEstimadaLlegada.
vuelo2 horaEstimadaLlegada: '03'.
vuelo2 horaSalida: '00'.</do-it><do-it>adm agregarVuelo: vuelo2. </do-it><do-it>adm agregarAvion: avion1.</do-it><do-it>adm agregarVuelo: vuelo2. </do-it><do-it>adm agregarVuelo: vuelo2. </do-it><methods><class-id>ADMPasajes</class-id> <category>vuelos</category><body package="TP_FINAL_PARADIGMAS" selector="agregarVuelo:">agregarVuelo:unVueloaviones detect: [:avion | avion id = unVuelo id] ifFound: [vuelos add: unVuelo] ifNone: [^'No se encuentra el avión con el id 'unVuelo id].</body></methods><methods><class-id>ADMPasajes</class-id> <category>vuelos</category><body package="TP_FINAL_PARADIGMAS" selector="agregarVuelo:">agregarVuelo:unVueloaviones detect: [:avion | avion id = unVuelo id] ifFound: [vuelos add: unVuelo] ifNone: [^'No se encuentra el avión con el id ',unVuelo id].</body></methods><methods><class-id>ADMPasajes</class-id> <category>vuelos</category><body package="TP_FINAL_PARADIGMAS" selector="agregarVuelo:">agregarVuelo:unVuelo|  errorMessage |errorMessage:='No se encuentra el avión con el id ',unVuelo idaviones detect: [:avion | avion id = unVuelo id] ifFound: [vuelos add: unVuelo] ifNone: [^errorMessage].</body></methods><methods><class-id>ADMPasajes</class-id> <category>vuelos</category><body package="TP_FINAL_PARADIGMAS" selector="agregarVuelo:">agregarVuelo:unVueloaviones detect: [:avion | avion id = unVuelo id] ifFound: [vuelos add: unVuelo] ifNone: [^'No se encuentra el avión con el id dado'].</body></methods><do-it>adm agregarVuelo: vuelo2. </do-it><methods><class-id>ADMPasajes</class-id> <category>vuelos</category><body package="TP_FINAL_PARADIGMAS" selector="agregarVuelo:">agregarVuelo:unVueloaviones detect: [:avion | avion id = unVuelo idAvion] ifFound: [vuelos add: unVuelo] ifNone: [^'No se encuentra el avión con el id dado'].</body></methods><do-it>adm agregarVuelo: vuelo2. 
</do-it><do-it>adm agregarVuelo: vuelo3.</do-it><do-it>
adm agregarPasaje: pasaje1.</do-it><do-it>adm agregarPasaje: pasaje2.</do-it><do-it>adm agregarPasaje: pasaje3.
</do-it><do-it>adm agregarPasaje: pasaje4.
</do-it><do-it>adm destinoMasConcurridoEntre: fechaSalida y: fechaEstimadaLlegada. 
</do-it><methods><class-id>ADMPasajes</class-id> <category>consultas</category><body package="TP_FINAL_PARADIGMAS" selector="destinoMasConcurridoEntre:y:">destinoMasConcurridoEntre:fecha1 y:fecha2| vuelosTotales vueloTotalesEntre2Fechas destinos |destinos := Dictionary new.vuelosTotales := OrderedCollection new.pasajes do: [:pasaje |     vuelos detect: [:vuelo |         (vuelo id = pasaje idVuelo) ifTrue: [vuelosTotales add: vuelo]    ]].vueloTotalesEntre2Fechas := vuelosTotales select: [:vuelo |     vuelo fechaSalida between: fecha1 and: fecha2].vueloTotalesEntre2Fechas do: [:vuelo |     | ciudad |    ciudad := vuelo ciudadLlegada.    (destinos includesKey: ciudad)         ifTrue: [destinos at: ciudad put: (destinos at: ciudad) + 1]        ifFalse: [destinos at: ciudad put: 1]].^destinos.</body></methods><methods><class-id>ADMPasajes</class-id> <category>consultas</category><body package="TP_FINAL_PARADIGMAS" selector="destinoMasConcurridoEntre:y:">destinoMasConcurridoEntre:fecha1 y:fecha2| vuelosTotales vueloTotalesEntre2Fechas destinos |destinos := Dictionary new.vuelosTotales := OrderedCollection new.pasajes do: [:pasaje |     vuelos do: [:vuelo |         (vuelo id = pasaje idVuelo) ifTrue: [vuelosTotales add: vuelo]    ]].vueloTotalesEntre2Fechas := vuelosTotales select: [:vuelo |     vuelo fechaSalida between: fecha1 and: fecha2].vueloTotalesEntre2Fechas do: [:vuelo |     | ciudad |    ciudad := vuelo ciudadLlegada.    (destinos includesKey: ciudad)         ifTrue: [destinos at: ciudad put: (destinos at: ciudad) + 1]        ifFalse: [destinos at: ciudad put: 1]].^destinos.</body></methods><do-it>adm vuelosHacia: 'parana' desde: 'Concepcion del Uruguay' entre: fechaSalida y: fechaEstimadaLlegada.
</do-it><do-it>adm fecha1:fechaSalida destino:'catamarca'.
</do-it><do-it>adm fecha1:fechaSalida destino:'catamarca'.
</do-it><methods><class-id>ADMPasajes</class-id> <category>consultas</category><body package="TP_FINAL_PARADIGMAS" selector="fecha1:destino:">fecha1:fecha1 destino:unDestino	| listaVuelos |	listaVuelos:=vuelos select: [:vuelo | (vuelo fechaSalida=fecha1) &amp; (vuelo ciudadLlegada='catamarca')] .	^listaVuelos</body></methods><do-it>adm fecha1:fechaSalida destino:'catamarca'.
</do-it><methods><class-id>ADMPasajes</class-id> <category>consultas</category><body package="TP_FINAL_PARADIGMAS" selector="fecha1:destino:">fecha1:fecha1 destino:unDestino	| listaVuelos |	listaVuelos:=vuelos select: [:vuelo | (vuelo fechaSalida=fecha1) &amp; (vuelo ciudadLlegada='parana')] .	^listaVuelos</body></methods><do-it>adm fecha1:fechaSalida destino:'catamarca'.
</do-it><methods><class-id>ADMPasajes</class-id> <category>consultas</category><body package="TP_FINAL_PARADIGMAS" selector="fecha1:destino:">fecha1:fecha1 destino:unDestino	| listaVuelos |	listaVuelos:=vuelos select: [:vuelo | (vuelo fechaSalida=fecha1) &amp; (vuelo ciudadLlegada=unDestino)] .	^listaVuelos</body></methods><do-it>adm fecha1:fechaSalida destino:'parana'.
</do-it><do-it>adm fecha1:fechaSalida destino:'catamarca'.
</do-it><methods><class-id>ADMPasajes</class-id> <category>consultas</category><body package="TP_FINAL_PARADIGMAS" selector="viajantesVuelo:">viajantesVuelo: idVuelo| pasajesVuelo  resultadoFinal|pasajesVuelo:=pasajes select: [:pasaje | pasaje idVuelo = idVuelo].resultadoFinal:= pasajesVuelo collect: [:pasaje | personas detect: [:persona | persona id = pasaje idPersona]].^resultadoFinal</body></methods><do-it>adm viajantesVuelo: 1.
</do-it><methods><class-id>ADMPasajes</class-id> <category>vuelos</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarVuelo:">eliminarVuelo: idVuelovuelos removeAllSuchThat: [:v|v id = idVuelo]</body></methods><methods><class-id>ADMPasajes</class-id> <category>reservas</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarReserva:">eliminarReserva: idReservareservas removeAllSuchThat: [:v|v id = idReserva]</body></methods><do-it>adm eliminarVuelo:1.
</do-it><methods><class-id>ADMPasajes</class-id> <category>vuelos</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarVuelo:">eliminarVuelo: idVuelopasajes detect: [:pasaje | pasaje idVuelo = idVuelo ifTrue: [^'no']]vuelos removeAllSuchThat: [:v|v id = idVuelo]</body></methods><methods><class-id>ADMPasajes</class-id> <category>vuelos</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarVuelo:">eliminarVuelo: idVuelopasajes detect: [:pasaje | pasaje idVuelo = idVuelo ifTrue: [^'no']].vuelos removeAllSuchThat: [:v|v id = idVuelo]</body></methods><methods><class-id>ADMPasajes</class-id> <category>vuelos</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarVuelo:">eliminarVuelo: idVuelopasajes detect: [:pasaje | pasaje idVuelo = idVuelo ifTrue: [^'no']].vuelos removeAllSuchThat: [:v|v id = idVuelo].</body></methods><methods><class-id>ADMPasajes</class-id> <category>vuelos</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarVuelo:">eliminarVuelo: idVuelopasajes detect: [:pasaje | pasaje idVuelo = idVuelo ifFalse: [		vuelos removeAllSuchThat: [:v|v id = idVuelo]]]</body></methods><methods><class-id>ADMPasajes</class-id> <category>vuelos</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarVuelo:">eliminarVuelo: idVuelo  | pasajesVuelo |  pasajesVuelo := pasajes select: [:pasaje | pasaje idVuelo = idVuelo].  pasajes isEmpty ifTrue: [    vuelos removeAllSuchThat: [:v | v id = idVuelo]  ].</body></methods><methods><class-id>ADMPasajes</class-id> <category>vuelos</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarVuelo:">eliminarVuelo: idVuelo  | pasajesVuelo |  pasajesVuelo:= pasajes select: [:pasaje | pasaje idVuelo = idVuelo].  pasajes isEmpty ifTrue: [    vuelos removeAllSuchThat: [:v | v id = idVuelo]  ].</body></methods><methods><class-id>ADMPasajes</class-id> <category>vuelos</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarVuelo:">eliminarVuelo: idVuelovuelos removeAllSuchThat: [:v|v id = idVuelo]</body></methods><do-it>v:= VListaPersonas new.</do-it><do-it>v2:= VAgregarPersona new.</do-it><do-it>personaAgregar:= Persona new.</do-it><do-it>v2 persona: personaAgregar.
</do-it><do-it>v2 open.
</do-it><do-it>v2:= VAgregarPersona new.personaAgregar:= Persona new.v2 persona: personaAgregar.</do-it><do-it>v2 open.</do-it><class><name>VMenuPrincipal</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>adm </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><do-it>VMenuPrincipal organization addCategory: #'initialize-release'</do-it><methods><class-id>VMenuPrincipal</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize super initialize.</body></methods><methods><class-id>VMenuPrincipal</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize super initialize.adm:= ADMPasajes new.</body></methods><class><name>VListaPersonas</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspListaPersonas aspPersona admPersonas adm </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>VListaPersonas</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="adm:">adm: unAdmadm:=unAdm</body></methods><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAdmPersonas">botonAdmPersonas	| v listaPersonas|	listaPersonas:=OrderedCollection new.		v:= VListaPersonas new.	v personas: listaPersonas.	v adm:adm.	v open.</body></methods><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAdmPersonas">botonAdmPersonas	| v |	v:= VListaPersonas new.	v adm:adm.	v open.</body></methods><methods><class-id>VListaPersonas</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="adm:">adm: unAdmadm:=unAdm</body></methods><methods><class-id>VListaPersonas</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="adm:">adm: unAdmadm:=unAdm.self aspListaPersonas list:adm personas.</body></methods><do-it>VAgregarPersona renameTo: #VPersona</do-it><comment><class-id>VPersona</class-id><body>VAgregarPersona has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.</body></comment><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregarPersona">botonAgregarPersona| vAgregarPersona nuevaPersona|	"This stub method was generated by UIDefiner"vAgregarPersona := VPersona new.nuevaPersona := Persona new.vAgregarPersona persona: nuevaPersona.vAgregarPersona open.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregarPersona">botonAgregarPersona| vAgregarPersona nuevaPersona|	"This stub method was generated by UIDefiner"vAgregarPersona := VPersona new.nuevaPersona := Persona new.vAgregarPersona persona: nuevaPersona.vAgregarPersona open.</body></methods><methods><class-id>VPersona</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="acepto">acepto^agregar value</body></methods><do-it>VPersona organization addCategory: #accessing</do-it><do-it>VPersona classifySymbol: #acepto under: #accessing</do-it><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregarPersona">botonAgregarPersona| vAgregarPersona nuevaPersona|	"This stub method was generated by UIDefiner"vAgregarPersona := VPersona new.nuevaPersona := Persona new.vAgregarPersona persona: nuevaPersona.vAgregarPersona open.vAgregarPersona acepto ifTrue: [	adm agregarPersona: nuevaPersona		].</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregarPersona">botonAgregarPersona| vAgregarPersona nuevaPersona|	"This stub method was generated by UIDefiner"vAgregarPersona := VPersona new.nuevaPersona := Persona new.vAgregarPersona persona: nuevaPersona.vAgregarPersona open.vAgregarPersona acepto ifTrue: [	adm agregarPersona: nuevaPersona		self aspListaPersonas list:adm personas.	].</body></methods><methods><class-id>ADMPasajes</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="personas">personas	^personas</body></methods><methods><class-id>ADMPasajes</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="personas:">personas: anObject	personas := anObject</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregarPersona">botonAgregarPersona| vAgregarPersona nuevaPersona|	"This stub method was generated by UIDefiner"vAgregarPersona := VPersona new.nuevaPersona := Persona new.vAgregarPersona persona: nuevaPersona.vAgregarPersona open.vAgregarPersona acepto ifTrue: [	adm agregarPersona: nuevaPersona.	self aspListaPersonas list:adm personas.	].</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'June 28, 2024' '5:34:29 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 17:34:29 on 28 de junio de 2024."</do-it><methods><class-id>VListaPersonas class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 583 309 1502 754 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.DataSetSpec} 					#properties: #(#{UI.PropertyListDictionary} #showHorizontalLines true #allowColumnResizing true #showVerticalLines true #allowColumnReordering false ) 					#layout: #(#{Graphics.LayoutFrame} 78 0 57 0 761 0 327 0 ) 					#name: #Datset1 					#model: #aspListaPersonas 					#columns: #(						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona id' 							#label: 'ID' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#type: #number 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona nombre' 							#label: 'NOMBRE' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona dni' 							#label: 'DNI' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona nacimiento' 							#label: 'FECHA DE NACIMIENTO' 							#labelIsImage: false 							#width: 180 							#rendererType: #Text 							#editorType: #None 							#type: #date 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona domicilio' 							#label: 'DOMICILIO' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona email' 							#label: 'EMAIL' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona sexo' 							#label: 'SEXO' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#noScroll: false ) ) ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 78 0 351 0 130 0 372 0 ) 					#name: #btnAgregarPersona 					#model: #botonAgregarPersona 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 486 0 351 0 538 0 372 0 ) 					#name: #btnEliminarPersona 					#model: #botonEliminarPersona 					#label: 'Eliminar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 282 0 351 0 334 0 372 0 ) 					#name: #btnModificarPersona 					#model: #botonModificarPersona 					#label: 'Modificar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 690 0 353 0 742 0 374 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) ) ) )</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'June 28, 2024' '5:38:22 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 17:38:22 on 28 de junio de 2024."</do-it><methods><class-id>VListaPersonas class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 501 298 1420 743 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.DataSetSpec} 					#properties: #(#{UI.PropertyListDictionary} #showHorizontalLines true #allowColumnResizing true #showVerticalLines true #allowColumnReordering false ) 					#layout: #(#{Graphics.LayoutFrame} 78 0 57 0 761 0 327 0 ) 					#name: #Datset1 					#model: #aspListaPersonas 					#columns: #(						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona id' 							#label: 'ID' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#type: #number 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona nombre' 							#label: 'NOMBRE' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona dni' 							#label: 'DNI' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#type: #number 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona nacimiento' 							#label: 'FECHA DE NACIMIENTO' 							#labelIsImage: false 							#width: 180 							#rendererType: #Text 							#editorType: #None 							#type: #date 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona domicilio' 							#label: 'DOMICILIO' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona email' 							#label: 'EMAIL' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona sexo' 							#label: 'SEXO' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#noScroll: false ) ) ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 78 0 351 0 130 0 372 0 ) 					#name: #btnAgregarPersona 					#model: #botonAgregarPersona 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 486 0 351 0 538 0 372 0 ) 					#name: #btnEliminarPersona 					#model: #botonEliminarPersona 					#label: 'Eliminar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 282 0 351 0 334 0 372 0 ) 					#name: #btnModificarPersona 					#model: #botonModificarPersona 					#label: 'Modificar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 690 0 353 0 742 0 374 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) ) ) )</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'June 28, 2024' '5:43:01 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 17:43:01 on 28 de junio de 2024."</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'June 28, 2024' '5:43:03 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 17:43:03 on 28 de junio de 2024."</do-it><methods><class-id>ADMPasajes</class-id> <category>reservas</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarPersona:">eliminarPersona: idPersonapersonas removeAllSuchThat: [:p|p id = idPersona]</body></methods><do-it>ADMPasajes organization addCategory: #personas</do-it><do-it>ADMPasajes classifySymbol: #eliminarPersona: under: #personas</do-it><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminarPersona">botonEliminarPersona	"This stub method was generated by UIDefiner"	adm eliminarPersona: 1.	self aspListaPersonas list: adm personas.	^self</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminarPersona">botonEliminarPersona	"This stub method was generated by UIDefiner"	adm eliminarPersona: 1.	self aspListaPersonas list: adm personas.</body></methods><methods><class-id>VListaPersonas class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 501 298 1420 743 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.DataSetSpec} 					#properties: #(#{UI.PropertyListDictionary} #showHorizontalLines true #allowColumnResizing true #showVerticalLines true #allowColumnReordering false ) 					#layout: #(#{Graphics.LayoutFrame} 78 0 57 0 761 0 327 0 ) 					#name: #dsetListaPersonas 					#model: #aspListaPersonas 					#columns: #(						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona id' 							#label: 'ID' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#type: #number 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona nombre' 							#label: 'NOMBRE' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona dni' 							#label: 'DNI' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#type: #number 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona nacimiento' 							#label: 'FECHA DE NACIMIENTO' 							#labelIsImage: false 							#width: 180 							#rendererType: #Text 							#editorType: #None 							#type: #date 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona domicilio' 							#label: 'DOMICILIO' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona email' 							#label: 'EMAIL' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspPersona sexo' 							#label: 'SEXO' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#noScroll: false ) ) ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 78 0 351 0 130 0 372 0 ) 					#name: #btnAgregarPersona 					#model: #botonAgregarPersona 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 486 0 351 0 538 0 372 0 ) 					#name: #btnEliminarPersona 					#model: #botonEliminarPersona 					#label: 'Eliminar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 282 0 351 0 334 0 372 0 ) 					#name: #btnModificarPersona 					#model: #botonModificarPersona 					#label: 'Modificar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 690 0 353 0 742 0 374 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminarPersona">botonEliminarPersona| personaSeleccionada |	"This stub method was generated by UIDefiner"	adm eliminarPersona: 1.	self aspListaPersonas list: adm personas.	 personaSeleccionada := self dsetListaPersonas selection.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminarPersona">botonEliminarPersona| personaSeleccionada |	"This stub method was generated by UIDefiner"	adm eliminarPersona: 1.	self aspListaPersonas list: adm personas.	 personaSeleccionada := self dsetListaPersonas selection.	Transcript show: personaSeleccionada printString; cr.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminarPersona">botonEliminarPersona    | personaSeleccionada |    "Eliminar la persona seleccionada usando el administrador"    personaSeleccionada := self dsetListaPersonas selection.    adm eliminarPersona: personaSeleccionada.        "Actualizar la lista de personas en la vista"    self aspListaPersonas list: adm personas.        "Mostrar en el Transcript el valor del elemento seleccionado"    Transcript show: personaSeleccionada printString; cr.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminarPersona">botonEliminarPersona    | personaSeleccionada |    "Eliminar la persona seleccionada usando el administrador"    personaSeleccionada := self dsetListaPersonas selection.        "Mostrar en el Transcript el valor del elemento seleccionado"    Transcript show: personaSeleccionada printString; cr.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminarPersona">botonEliminarPersona    | personaSeleccionada |    "Eliminar la persona seleccionada usando el administrador"    personaSeleccionada := self dsetListaPersonas selection.        "Mostrar en el Transcript el valor del elemento seleccionado"    Transcript show: personaSeleccionada printString; cr.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminarPersona">botonEliminarPersona Transcript show:'CHOTAA'</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminarPersona">botonEliminarPersonaTranscript  show: aspListaPersonas selection.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminarPersona">botonEliminarPersonaTranscript  show: aspListaPersonas selection id.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminarPersona">botonEliminarPersonaTranscript show: aspListaPersonas selection id.</body></methods><methods><class-id>ADMPasajes</class-id> <category>reservas</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarPersona:">eliminarPersona: idPersonapersonas removeAllSuchThat: [:p|p id = idPersona]</body></methods><do-it>ADMPasajes organization addCategory: #personas</do-it><do-it>ADMPasajes classifySymbol: #eliminarPersona: under: #personas</do-it><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminarPersona">botonEliminarPersonaadm eliminarPersona: aspListaPersonas selection id.aspListaPersonas list:adm personas.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonModificarPersona">botonModificarPersona| personaAModificar |personaAModificar:= self aspListaPersonas selection.aspListaPersonas list:adm personas.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonModificarPersona">botonModificarPersona| personaAModificar |personaAModificar:= self aspListaPersonas selection.aspPersona:=  personaAModificar.aspListaPersonas list:adm personas.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonModificarPersona">botonModificarPersona| personaAModificar vVentanaPersona|personaAModificar:= self aspListaPersonas selection.vVentanaPersona:= VPersona new.aspPersona:=  personaAModificar.aspListaPersonas list:adm personas.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonModificarPersona">botonModificarPersona| personaAModificar vVentanaPersona|personaAModificar:= self aspListaPersonas selection.vVentanaPersona:= VPersona new.VPersona person:personaAModificar.aspPersona:=  personaAModificar.aspListaPersonas list:adm personas.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonModificarPersona">botonModificarPersona| personaAModificar vVentanaPersona|personaAModificar:= self aspListaPersonas selection.vVentanaPersona:= VPersona new.vVentanaPersona person:personaAModificar.aspPersona:=  personaAModificar.aspListaPersonas list:adm personas.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonModificarPersona">botonModificarPersona| personaAModificar vVentanaPersona|personaAModificar:= self aspListaPersonas selection.vVentanaPersona:= VPersona new.vVentanaPersona person:personaAModificar.aspPersona:=  personaAModificar.aspListaPersonas list:adm personas.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonModificarPersona">botonModificarPersona| personaAModificar vVentanaPersona|personaAModificar:= self aspListaPersonas selection.vVentanaPersona:= VPersona new.vVentanaPersona persona:personaAModificar.aspPersona:=  personaAModificar.aspListaPersonas list:adm personas.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonModificarPersona">botonModificarPersona| personaAModificar vVentanaPersona|personaAModificar:= self aspListaPersonas selection.vVentanaPersona:= VPersona new.vVentanaPersona persona:personaAModificar.vVentanaPersona open.^self</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'July 1, 2024' '6:01:18 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 18:01:18 on 1 de julio de 2024."</do-it><methods><class-id>VMenuPrincipal</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize super initialize.adm:= ADMPasajes new.btnModificarPersona </body></methods><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAdmPersonas">botonAdmPersonas	| v |	v:= VListaPersonas new.v botonModificarPersona enabled: false.	v adm:adm.	v open.</body></methods><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAdmPersonas">botonAdmPersonas	| v |	v:= VListaPersonas new.	v adm:adm.	v open.</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonModificarPersona">botonModificarPersona| personaAModificar vVentanaPersona|self aspListaPersonas selection ifNil:[Dialog warn:'Debe seleccionar una persona'].vVentanaPersona:= VPersona new.vVentanaPersona persona:self aspListaPersonas selection.vVentanaPersona open.^self</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonModificarPersona">botonModificarPersona| vVentanaPersona|self aspListaPersonas selection ifNil:[Dialog warn:'Debe seleccionar una persona'].vVentanaPersona:= VPersona new.vVentanaPersona persona:self aspListaPersonas selection.vVentanaPersona open.^self</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonModificarPersona">botonModificarPersona| vVentanaPersona|self aspListaPersonas selection ifNil:[Dialog warn:'Debe seleccionar una persona']ifNotNil:[	vVentanaPersona:= VPersona new.vVentanaPersona persona:self aspListaPersonas selection.vVentanaPersona open.^self	].</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonModificarPersona">botonModificarPersona| vVentanaPersona|self aspListaPersonas selection ifNil:[Dialog warn:'Debe seleccionar una persona']ifNotNil:[	vVentanaPersona:= VPersona new.	vVentanaPersona persona:self aspListaPersonas selection.	vVentanaPersona open.	^self	].</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonModificarPersona">botonModificarPersona| vVentanaPersona|self aspListaPersonas selection ifNil:[Dialog warn:'Debe seleccionar una persona']ifNotNil:[	vVentanaPersona:= VPersona new.	vVentanaPersona persona:self aspListaPersonas selection.	vVentanaPersona open.	^self].</body></methods><methods><class-id>VListaPersonas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminarPersona">botonEliminarPersonaself aspListaPersonas selection ifNil:[Dialog warn:'Debe seleccionar una persona']ifNotNil:[	adm eliminarPersona: aspListaPersonas selection id.	aspListaPersonas list:adm personas.].</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'July 1, 2024' '6:09:37 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 18:09:37 on 1 de julio de 2024."</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'July 1, 2024' '6:19:09 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 18:19:09 on 1 de julio de 2024."</do-it><class><name>VMenuConsultas</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>VMenuConsultas class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Consultas' 			#bounds: #(#{Graphics.Rectangle} 860 420 1165 823 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 41 0 48 0 273 0 69 0 ) 					#name: #btnVuelosEntre2Fechas 					#model: #botonVuelosEntre2Fechas 					#label: 'Vuelos entre 2 fechas' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 41 0 96 0 273 0 117 0 ) 					#name: #btnConsultarPasaje 					#model: #botonConsultarPasaje 					#label: 'Consultar Pasaje' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 41 0 240 0 273 0 261 0 ) 					#name: #btnDestinoMasConcurridoEntre2Fechas 					#model: #botonDestinoMasConcurridoEntre2Fechas 					#label: 'Destino mas concurrido entre 2 fechas' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 41 0 192 0 273 0 213 0 ) 					#name: #ActionButton1 					#model: #btnBuscarVuelo 					#label: 'Buscar vuelo' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 41 0 144 0 273 0 165 0 ) 					#name: #btnViajantesVuelo 					#model: #botonViajantesVuelo 					#label: 'Viajantes de un vuelo' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 41 0 288 0 273 0 309 0 ) 					#name: #btnBuscarVueloPorDestinoDesdeYFechas 					#model: #botonBuscarVueloPorDestinoDesdeYFechas 					#label: 'Buscar vuelo por destino desde y fechas' 					#defaultable: true ) ) ) )</body></methods><class><name>VMenuConsultas</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><do-it>Smalltalk defineClass: #VMenuConsultas	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: ' '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>VMenuConsultas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonVuelosEntre2Fechas">botonVuelosEntre2Fechas	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VMenuConsultas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonViajantesVuelo">botonViajantesVuelo	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VMenuConsultas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultarPasaje">botonConsultarPasaje	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VMenuConsultas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonDestinoMasConcurridoEntre2Fechas">botonDestinoMasConcurridoEntre2Fechas	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VMenuConsultas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonBuscarVueloPorDestinoDesdeYFechas">botonBuscarVueloPorDestinoDesdeYFechas	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VMenuConsultas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="btnBuscarVuelo">btnBuscarVuelo	"This stub method was generated by UIDefiner"	^self</body></methods><comment><class-id>VMenuConsultas</class-id><body>VMenuConsultas has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.</body></comment><methods><class-id>VMenuPrincipal</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize super initialize.adm:= ADMPasajes new.</body></methods><do-it>VMenuConsultas organization addCategory: #'initialize-release'</do-it><class><name>VMenuConsultas</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>adm </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>VMenuConsultas</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize super initialize.adm:= ADMPasajes new.</body></methods><class><name>VMenuConsultas</name><environment>Smalltalk</environment><super>UI.SimpleDialog</super><private>false</private><indexed-type>none</indexed-type><inst-vars>adm </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>VMenuPrincipal class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 748 398 1173 643 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 90 0 95 0 196 0 116 0 ) 					#name: #btnAdmPersonas 					#model: #botonAdmPersonas 					#label: 'ADM PERSONAS' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 90 0 37 0 196 0 58 0 ) 					#name: #btnAdmVuelos 					#model: #botonAdmVuelos 					#label: 'ADM VUELOS' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 90 0 153 0 196 0 174 0 ) 					#name: #btnConsultas 					#model: #botonConsultas 					#label: 'CONSULTAS' 					#defaultable: true ) ) ) )</body></methods><class><name>VMenuPrincipal</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>adm </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><do-it>Smalltalk defineClass: #VMenuPrincipal	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'adm  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultas">botonConsultas	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultas">botonConsultas	| v |	v:= VMenuConsultas new.	v adm:adm.	v open.</body></methods><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultas">botonConsultas	| v |	v:= VMenuConsultas new.	v adm:adm.	v open.</body></methods><methods><class-id>VMenuConsultas</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="adm:">adm: unAdmadm:=unAdm.</body></methods><do-it>VMenuConsultas organization addCategory: #accessing</do-it><do-it>VMenuConsultas organization addCategory: #accessing</do-it><do-it>VMenuConsultas classifySymbol: #adm: under: #accessing</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'July 1, 2024' '6:33:28 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 18:33:28 on 1 de julio de 2024."</do-it><class><name>VConsultaDestinoMasConcurrido2Fechas</name><environment>Smalltalk</environment><super>UI.SimpleDialog</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>VConsultaDestinoMasConcurrido2Fechas class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Destino mas concurrido entre 2 fechas' 			#bounds: #(#{Graphics.Rectangle} 860 420 1318 768 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 170 0 222 0 224 0 243 0 ) 					#name: #btnConsultar 					#model: #botonConsultar 					#label: 'Consultar' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 146 0 161 0 246 0 182 0 ) 					#name: #InputField1 					#type: #date 					#formatString: 'dd/mm/yyyy' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 146 0 112 0 246 0 133 0 ) 					#name: #InputField2 					#type: #date 					#formatString: 'dd/mm/yyyy' ) ) ) )</body></methods><class><name>VConsultaDestinoMasConcurrido2Fechas</name><environment>Smalltalk</environment><super>UI.SimpleDialog</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspConsulta </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><do-it>Smalltalk defineClass: #VConsultaDestinoMasConcurrido2Fechas	superclass: #{UI.SimpleDialog}	indexedType: #none	private: false	instanceVariableNames: ' aspConsulta '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultar">botonConsultar	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="aspConsulta">aspConsulta	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^aspConsulta isNil		ifTrue:			[aspConsulta := nil asValue]		ifFalse:			[aspConsulta]</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Destino mas concurrido entre 2 fechas' 			#bounds: #(#{Graphics.Rectangle} 860 420 1318 768 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 170 0 222 0 224 0 243 0 ) 					#name: #btnConsultar 					#model: #botonConsultar 					#label: 'Consultar' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 146 0 161 0 246 0 182 0 ) 					#name: #InputField1 					#model: #'aspConsulta fechaSalida' 					#type: #date 					#formatString: 'dd/mm/yyyy' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 146 0 112 0 246 0 133 0 ) 					#name: #InputField2 					#model: #'aspConsulta fechaEstimadaLlegada' 					#type: #date 					#formatString: 'dd/mm/yyyy' ) ) ) )</body></methods><comment><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id><body>VConsultaDestinoMasConcurrido2Fechas has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.Instance Variables:	aspConsulta	&lt;ValueHolder&gt;	description of aspConsulta</body></comment><class><name>VConsultaDestinoMasConcurrido2Fechas</name><environment>Smalltalk</environment><super>UI.SimpleDialog</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspConsulta adm </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultar">botonConsultaradm cantidadVuelosEntre:self aspConsulta fechaSalida y:self aspConsulta fechaEstimadaLlegada.	"This stub method was generated by UIDefiner"	^self</body></methods><do-it>VConsultaDestinoMasConcurrido2Fechas organization addCategory: #'initialize-release'</do-it><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>initialize-release</category><body package="TP_FINAL_PARADIGMAS" selector="initialize">initialize super initialize.adm:= ADMPasajes new.</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultar">botonConsultar| response |response:= adm cantidadVuelosEntre:self aspConsulta fechaSalida y:self aspConsulta fechaEstimadaLlegada.	"This stub method was generated by UIDefiner"Dialog warn: response value.</body></methods><do-it>adm destinoMasConcurridoEntre: fechaSalida y: fechaEstimadaLlegada. </do-it><methods><class-id>VMenuConsultas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonDestinoMasConcurridoEntre2Fechas">botonDestinoMasConcurridoEntre2Fechas	| v |	v:= VMenuConsultas new.	v adm:adm.	v open.</body></methods><methods><class-id>VMenuConsultas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonDestinoMasConcurridoEntre2Fechas">botonDestinoMasConcurridoEntre2Fechas	| v |	v:= VConsultaDestinoMasConcurrido2Fechas new.	v adm:adm.	v open.</body></methods><do-it>VConsultaDestinoMasConcurrido2Fechas organization addCategory: #accessing</do-it><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="adm:">adm: unAdmadm:=unAdm.</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Destino mas concurrido entre 2 fechas' 			#bounds: #(#{Graphics.Rectangle} 731 346 1189 694 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 170 0 222 0 224 0 243 0 ) 					#name: #btnConsultar 					#model: #botonConsultar 					#label: 'Consultar' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 146 0 161 0 246 0 182 0 ) 					#name: #InputField1 					#model: #'aspConsulta fechaSalida | consultar' 					#type: #date 					#formatString: 'dd/mm/yyyy' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 146 0 112 0 246 0 133 0 ) 					#name: #InputField2 					#model: #'aspConsulta fechaEstimadaLlegada | consultar' 					#type: #date 					#formatString: 'dd/mm/yyyy' ) ) ) )</body></methods><class><name>VConsultaDestinoMasConcurrido2Fechas</name><environment>Smalltalk</environment><super>UI.SimpleDialog</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspConsulta adm consultar </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><do-it>Smalltalk defineClass: #VConsultaDestinoMasConcurrido2Fechas	superclass: #{UI.SimpleDialog}	indexedType: #none	private: false	instanceVariableNames: 'aspConsulta adm  consultar '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="consultar">consultar	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^consultar isNil		ifTrue:			[consultar := nil asValue]		ifFalse:			[consultar]</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Destino mas concurrido entre 2 fechas' 			#bounds: #(#{Graphics.Rectangle} 731 346 1189 694 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 170 0 222 0 224 0 243 0 ) 					#name: #btnConsultar 					#model: #botonConsultar 					#label: 'Consultar' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 148 0 108 0 248 0 129 0 ) 					#name: #InputField1 					#model: #'aspConsulta fechaSalida | consultar' 					#type: #date 					#formatString: 'dd/mm/yyyy' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 150 0 148 0 250 0 169 0 ) 					#name: #InputField2 					#model: #'aspConsulta fechaEstimadaLlegada | consultar' 					#type: #date 					#formatString: 'dd/mm/yyyy' ) ) ) )</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultar">botonConsultar| response |self aspConsulta fechaSalida ifNill:[Dialog warn:'Debe ingresar una fecha de salida']ifNotNil: [Dialog warn:'Debe ingresar una fecha estimada de llegada']ifNotNil: [	response:= adm cantidadVuelosEntre:self aspConsulta fechaSalida y:self aspConsulta fechaEstimadaLlegada.Dialog warn: response value.].</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultar">botonConsultar| response |self aspConsulta fechaSalida ifNill:[Dialog warn:'Debe ingresar una fecha de salida']ifNotNil: [Dialog warn:'Debe ingresar una fecha estimada de llegada']ifNotNil: [	response:= adm cantidadVuelosEntre:self aspConsulta fechaSalida y:self aspConsulta fechaEstimadaLlegada.Dialog warn: response value].</body></methods><remove-selector><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <selector>initialize</selector></remove-selector><do-it>VConsultaDestinoMasConcurrido2Fechas organization removeCategory: #'initialize-release'</do-it><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultar">botonConsultar| response |self aspConsulta fechaSalida ifNill:[Dialog warn:'Debe ingresar una fecha de salida']ifNotNil: [Dialog warn:'Debe ingresar una fecha estimada de llegada']ifNotNil: [	response:= adm cantidadVuelosEntre:self aspConsulta fechaSalida y:self aspConsulta fechaEstimadaLlegada.Dialog warn: response value].</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultar">botonConsultar| response |self aspConsulta fechaSalida ifNil:[Dialog warn:'Debe ingresar una fecha de salida']ifNotNil: [Dialog warn:'Debe ingresar una fecha estimada de llegada']ifNotNil: [	response:= adm cantidadVuelosEntre:self aspConsulta fechaSalida y:self aspConsulta fechaEstimadaLlegada.Dialog warn: response value].</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultar">botonConsultar| response |self aspConsulta fechaSalida ifNil:[Dialog warn:'Debe ingresar una fecha de salida']ifNotNil: [Dialog warn:'Debe ingresar una fecha estimada de llegada']ifNotNil: [	response:= adm cantidadVuelosEntre:self aspConsulta fechaSalida y:self aspConsulta fechaEstimadaLlegada.Dialog warn: response value].</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="consulta">consulta^aspConsulta value</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="consuta:">consuta:unaConsulta	aspConsulta:=unaConsulta asValue.</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultar">botonConsultar| response |self consulta fechaSalida ifNil:[Dialog warn:'Debe ingresar una fecha de salida']ifNotNil: [Dialog warn:'Debe ingresar una fecha estimada de llegada']ifNotNil: [	response:= adm cantidadVuelosEntre:self aspConsulta fechaSalida y:self aspConsulta fechaEstimadaLlegada.Dialog warn: response value].</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultar">botonConsultar| response |self consulta fechaSalidaifNil:[Dialog warn:'Debe ingresar una fecha de salida']ifNotNil: [Dialog warn:'Debe ingresar una fecha estimada de llegada']ifNotNil: [	response:= adm cantidadVuelosEntre:self aspConsulta fechaSalida y:self aspConsulta fechaEstimadaLlegada.Dialog warn: response value].</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Destino mas concurrido entre 2 fechas' 			#bounds: #(#{Graphics.Rectangle} 731 346 1189 694 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 170 0 222 0 224 0 243 0 ) 					#name: #btnConsultar 					#model: #botonConsultar 					#label: 'Consultar' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 148 0 108 0 248 0 129 0 ) 					#name: #InputField1 					#model: #'aspConsulta fechaSalida | consultar' 					#type: #date 					#formatString: 'dd/mm/yyyy' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 150 0 148 0 250 0 169 0 ) 					#name: #InputField2 					#model: #'aspConsulta fechaEstimadaLlegada | consultar' 					#type: #date 					#formatString: 'dd/mm/yyyy' ) ) ) )</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultar">botonConsultar| response |self consulta fechaSalidaifNil:[Dialog warn:'Debe ingresar una fecha de salida']ifNotNil: [	response:= adm cantidadVuelosEntre:self aspConsulta fechaSalida y:self aspConsulta fechaEstimadaLlegada.Dialog warn: response value].</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultar">botonConsultar| response |self consulta fechaSalida ifNil:[Dialog warn:'Debe ingresar una fecha de salida']ifNotNil: [self consulta fechaEstimadaLlegada ifNil: [Dialog warn:'Debe ingresar una fecha estimada de llegada'] i	fNotNil: [response:= adm cantidadVuelosEntre:self aspConsulta fechaSalida y:self aspConsulta fechaEstimadaLlegada.Dialog warn: response value]]</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultar">botonConsultar| response |self consulta fechaSalida ifNil:[Dialog warn:'Debe ingresar una fecha de salida']ifNotNil: [self consulta fechaEstimadaLlegada ifNil: [Dialog warn:'Debe ingresar una fecha estimada de llegada'] 	fNotNil: [response:= adm cantidadVuelosEntre:self aspConsulta fechaSalida y:self aspConsulta fechaEstimadaLlegada.Dialog warn: response value]]</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultar">botonConsultar| response |self consulta fechaSalidaifNil:[Dialog warn:'Debe ingresar una fecha de salida']</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultar">botonConsultar| response |self consulta fechaSalidaifNil:[Dialog warn:'Debe ingresar una fecha de salida'].</body></methods><methods><class-id>VConsultaDestinoMasConcurrido2Fechas</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonConsultar">botonConsultarself consulta fechaSalidaifNil:[Dialog warn:'Debe ingresar una fecha de salida'].</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="asignarTipos:tipo2:tipo3:">asignarTipos: cantidadTipo1 tipo2: cantidadTipo2 tipo3: cantidadTipo3
    | cantidadTotal indice |
    cantidadTotal := self listaAsientos size.
    
    "Verificamos si la suma de las cantidades coincide con el total de asientos"
    (cantidadTipo1 + cantidadTipo2 + cantidadTipo3) = cantidadTotal
        ifFalse: [self error: 'La suma de las cantidades no coincide con el total de asientos'].
    
    indice := 1.
    
    "Asignamos Tipo 1"
    1 to: cantidadTipo1 do: [:i |
        (self listaAsientos at: indice) tipo: 'TIPO 1'.
        indice := indice + 1.
    ].
    
    "Asignamos Tipo 2"
    1 to: cantidadTipo2 do: [:i |
        (self listaAsientos at: indice) tipo: 'TIPO 2'.
        indice := indice + 1.
    ].
    
    "Asignamos Tipo 3"
    1 to: cantidadTipo3 do: [:i |
        (self listaAsientos at: indice) tipo: 'TIPO 3'.
        indice := indice + 1.
    ].</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="generarAsientos:y:">generarAsientos: filas y: columnas
    | fila columna asientoId asiento |
    fila := 1.
    [fila &lt;= filas] whileTrue: [
        columna := 1.
        [columna &lt;= columnas] whileTrue: [
            asientoId := String with: (Character value: (65 + fila - 1)).
            asientoId := asientoId, columna printString.
            asiento := Asiento new.
            asiento id: asientoId.
            asiento tipo: nil.
            self listaAsientos add: asiento.
            columna := columna + 1.
        ].
        fila := fila + 1.
    ].</body></methods><do-it>
avion1:= Avion new.
avion1 id: 1.
avion1 cantidadAsientosOcupados: 0.
avion1 listaAsientos: OrderedCollection new.</do-it><do-it>avion1 generarAsientos: 5 y: 3
</do-it><do-it>avion1 generarAsientos: 50 y: 30</do-it><do-it>avion1 generarAsientos: 5 y: 3.</do-it><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>listaAsientos</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>listaAsientos</staticKey> <definitionChange>added</definitionChange></component_static_change><class><name>Avion</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>id cantidadAsientosOcupados </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><do-it>avion1:= Avion new.
avion1 id: 1.
avion1 cantidadAsientosOcupados: 0.
avion1 listaAsientos: OrderedCollection new.</do-it><do-it>avion1 generarAsientos: 5 y: 3.</do-it><do-it>avion1 asignarTipos: 10 tipo2: 3 tipo3: 2.</do-it><do-it>
avion1:= Avion new.
avion1 id: 1.
avion1 cantidadAsientosOcupados: 0.
avion1 listaAsientos: OrderedCollection new.
</do-it><do-it>avion1 generarAsientos: 5 y: 3.</do-it><do-it>avion1 listaAsientos: OrderedCollection new.</do-it><do-it>avion:= Avion new.</do-it><do-it>avion id: 1.
avion cantidadAsientosOcupados: 0.
avion listaAsientos: OrderedCollection new.</do-it><do-it>avion generarAsientos: 5 y: 3.</do-it><do-it>a:= Avion new.</do-it><do-it>a id:1.a listaAsientos: OrderedCollection new.a cantidadAsientosOcupados: 0.</do-it><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="asignarTipos:tipo2:tipo3:">asignarTipos: cantidadTipo1 tipo2: cantidadTipo2 tipo3: cantidadTipo3
    | cantidadTotal indice |
    cantidadTotal := self listaAsientos size.
    
    "Verificamos si la suma de las cantidades coincide con el total de asientos"
    (cantidadTipo1 + cantidadTipo2 + cantidadTipo3) = cantidadTotal
        ifFalse: [self error: 'La suma de las cantidades no coincide con el total de asientos'].
    
    indice := 1.
    
    "Asignamos Tipo 1"
    1 to: cantidadTipo1 do: [:i |
        (self listaAsientos at: indice) tipo: 'TIPO 1'.
        indice := indice + 1.
    ].
    
    "Asignamos Tipo 2"
    1 to: cantidadTipo2 do: [:i |
        (self listaAsientos at: indice) tipo: 'TIPO 2'.
        indice := indice + 1.
    ].
    
    "Asignamos Tipo 3"
    1 to: cantidadTipo3 do: [:i |
        (self listaAsientos at: indice) tipo: 'TIPO 3'.
        indice := indice + 1.
    ].</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="generarAsientos:y:">generarAsientos: filas y: columnas
    | fila columna asientoId asiento |
    fila := 1.
    [fila &lt;= filas] whileTrue: [
        columna := 1.
        [columna &lt;= columnas] whileTrue: [
            asientoId := String with: (Character value: (65 + fila - 1)).
            asientoId := asientoId, columna printString.
            asiento := Asiento new.
            asiento id: asientoId.
            asiento tipo: nil.
            self listaAsientos add: asiento.
            columna := columna + 1.
        ].
        fila := fila + 1.
    ].</body></methods><do-it>avion1:= Avion new.</do-it><do-it>avion1 id: 1.
avion1 cantidadAsientosOcupados: 0.
avion1 listaAsientos: OrderedCollection new.</do-it><do-it>avion1 generarAsientos: 5 y: 5.
</do-it><do-it>avion1 asignarTipos: 15 tipo2: 5 tipo3: 5.</do-it><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="asignarTipos:tipo2:tipo3:">asignarTipos: cantidadTipo1 tipo2: cantidadTipo2 tipo3: cantidadTipo3    | cantidadTotal indice |    cantidadTotal := self listaAsientos size.        "Verificamos si la suma de las cantidades coincide con el total de asientos"    (cantidadTipo1 + cantidadTipo2 + cantidadTipo3) = cantidadTotal        ifFalse: [Dialog warn: 'La suma de las cantidades no coincide con el total de asientos'].        indice := 1.        "Asignamos Tipo 1"    1 to: cantidadTipo1 do: [:i |        (self listaAsientos at: indice) tipo: 'TIPO 1'.        indice := indice + 1.    ].        "Asignamos Tipo 2"    1 to: cantidadTipo2 do: [:i |        (self listaAsientos at: indice) tipo: 'TIPO 2'.        indice := indice + 1.    ].        "Asignamos Tipo 3"    1 to: cantidadTipo3 do: [:i |        (self listaAsientos at: indice) tipo: 'TIPO 3'.        indice := indice + 1.    ].</body></methods><do-it>avion1 asignarTipos: 15 tipo2: 5 tipo3: 5.
</do-it><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="asignarTipos:tipo2:tipo3:">asignarTipos: cantidadTipo1 tipo2: cantidadTipo2 tipo3: cantidadTipo3    | cantidadTotal indice |    cantidadTotal := self listaAsientos size.        "Verificamos si la suma de las cantidades coincide con el total de asientos"    (cantidadTipo1 + cantidadTipo2 + cantidadTipo3) = cantidadTotal        ifFalse: [Dialog warn: 'La suma de las cantidades no coincide con el total de asientos'] ifTrue: [ 	indice := 1.        "Asignamos Tipo 1"    1 to: cantidadTipo1 do: [:i |        (self listaAsientos at: indice) tipo: 'TIPO 1'.        indice := indice + 1.    ].        "Asignamos Tipo 2"    1 to: cantidadTipo2 do: [:i |        (self listaAsientos at: indice) tipo: 'TIPO 2'.        indice := indice + 1.    ].        "Asignamos Tipo 3"    1 to: cantidadTipo3 do: [:i |        (self listaAsientos at: indice) tipo: 'TIPO 3'.        indice := indice + 1.    ].].       </body></methods><do-it>avion1 asignarTipos: 15 tipo2: 5 tipo3: 15.
</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'July 3, 2024' '5:23:18 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 17:23:18 on 3 de julio de 2024."</do-it><class><name>VListaAviones</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>VListaAviones class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Aviones' 			#bounds: #(#{Graphics.Rectangle} 714 436 1634 836 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 105 0 320 0 157 0 341 0 ) 					#name: #btnAgregar 					#model: #botonAgregar 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 285 0 320 0 337 0 341 0 ) 					#name: #btnEliminar 					#model: #botonEliminar 					#label: 'Eliminar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 195 0 320 0 247 0 341 0 ) 					#name: #btnModificar 					#model: #botonModificar 					#label: 'Modificar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 371 0 320 0 423 0 341 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) 				#(#{UI.DataSetSpec} 					#properties: #(#{UI.PropertyListDictionary} #showHorizontalLines true #allowColumnResizing true #showVerticalLines true ) 					#layout: #(#{Graphics.LayoutFrame} 88 0 91 0 683 0 287 0 ) 					#name: #Dataset1 					#columns: #(						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true ) 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#noScroll: false ) ) ) ) ) )</body></methods><class><name>VListaAviones</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><do-it>Smalltalk defineClass: #VListaAviones	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: ' '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonCancelar">botonCancelar	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminar">botonEliminar	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonModificar">botonModificar	"This stub method was generated by UIDefiner"	^self</body></methods><comment><class-id>VListaAviones</class-id><body>VListaAviones has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.</body></comment><class><name>VListaAviones</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspAvion </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><do-it>Smalltalk defineClass: #VListaAviones	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: ' aspAvion '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>VListaAviones</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="aspAvion">aspAvion	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^aspAvion isNil		ifTrue:			[aspAvion := nil asValue]		ifFalse:			[aspAvion]</body></methods><methods><class-id>VListaAviones class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Aviones' 			#bounds: #(#{Graphics.Rectangle} 735 327 1655 727 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 105 0 320 0 157 0 341 0 ) 					#name: #btnAgregar 					#model: #botonAgregar 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 285 0 320 0 337 0 341 0 ) 					#name: #btnEliminar 					#model: #botonEliminar 					#label: 'Eliminar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 195 0 320 0 247 0 341 0 ) 					#name: #btnModificar 					#model: #botonModificar 					#label: 'Modificar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 371 0 320 0 423 0 341 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) 				#(#{UI.DataSetSpec} 					#properties: #(#{UI.PropertyListDictionary} #showHorizontalLines true #allowColumnResizing true #allowColumnReordering false #showVerticalLines true ) 					#layout: #(#{Graphics.LayoutFrame} 88 0 91 0 683 0 287 0 ) 					#name: #Dataset1 					#columns: #(						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false #allowSorting true ) 							#model: #'aspAvion id' 							#label: 'ID' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #number 							#noScroll: false 							#formatString: '' ) ) ) ) ) )</body></methods><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonCancelar">botonCancelar	"This stub method was generated by UIDefiner"	self closeRequest.</body></methods><class><name>VListaAviones</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspAvion aspListaAviones </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><do-it>Smalltalk defineClass: #VListaAviones	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'aspAvion  aspListaAviones '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>VListaAviones</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="aspListaAviones">aspListaAviones	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^aspListaAviones isNil		ifTrue:			[aspListaAviones :=  SelectionInList new.			aspListaAviones selectionIndexHolder compute:				[:v |				self aspAvion value: aspListaAviones selection].			aspListaAviones]		ifFalse:			[aspListaAviones]</body></methods><methods><class-id>VListaAviones class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Aviones' 			#bounds: #(#{Graphics.Rectangle} 500 320 1420 720 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 105 0 320 0 157 0 341 0 ) 					#name: #btnAgregar 					#model: #botonAgregar 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 285 0 320 0 337 0 341 0 ) 					#name: #btnEliminar 					#model: #botonEliminar 					#label: 'Eliminar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 195 0 320 0 247 0 341 0 ) 					#name: #btnModificar 					#model: #botonModificar 					#label: 'Modificar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 371 0 320 0 423 0 341 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) 				#(#{UI.DataSetSpec} 					#properties: #(#{UI.PropertyListDictionary} #showHorizontalLines true #allowColumnResizing true #showVerticalLines true #allowColumnReordering false ) 					#layout: #(#{Graphics.LayoutFrame} 88 0 91 0 683 0 287 0 ) 					#name: #Dataset1 					#model: #aspListaAviones 					#columns: #(						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion id' 							#label: 'ID' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #number 							#noScroll: false 							#formatString: '' ) ) ) ) ) )</body></methods><do-it>VListaAviones organization addCategory: #'initialize-release'</do-it><class><name>VListaAviones</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspAvion aspListaAviones adm </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>VListaAviones</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="adm">adm	^adm</body></methods><methods><class-id>VListaAviones</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="adm:">adm: anObject	adm := anObject</body></methods><methods><class-id>VListaAviones</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="adm:">adm: unAdmadm:=unAdm.self aspListaAviones list:adm aviones.</body></methods><methods><class-id>ADMPasajes</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="aviones">aviones	^aviones</body></methods><methods><class-id>ADMPasajes</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="aviones:">aviones: anObject	aviones := anObject</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'July 3, 2024' '5:36:13 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 17:36:13 on 3 de julio de 2024."</do-it><class><name>VAvion</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>VAvion class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Avion' 			#bounds: #(#{Graphics.Rectangle} 860 420 1349 818 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 162 0 244 0 214 0 265 0 ) 					#name: #ActionButton1 					#model: #botonAceptar 					#label: 'Aceptar' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 89 0 172 0 189 0 193 0 ) 					#name: #InputField1 					#model: #'aspAvion filas | agregar' 					#type: #number ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 95 0 143 0 ) 					#name: #Label1 					#label: 'Filas' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.LayoutFrame} 266 0 174 0 367 0 195 0 ) 					#name: #InputField2 					#model: #'aspAvion columnas | agregar' 					#type: #number ) 				#(#{UI.LabelSpec} 					#layout: #(#{Graphics.LayoutOrigin} 297 0 142 0 ) 					#name: #Label2 					#label: 'Columnas' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 234 0 244 0 286 0 265 0 ) 					#name: #ActionButton2 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) ) ) )</body></methods><class><name>VAvion</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspAvion agregar </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><do-it>Smalltalk defineClass: #VAvion	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: ' aspAvion agregar '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>VAvion</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonCancelar">botonCancelar	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VAvion</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAceptar">botonAceptar	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>VAvion</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="agregar">agregar	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^agregar isNil		ifTrue:			[agregar := nil asValue]		ifFalse:			[agregar]</body></methods><methods><class-id>VAvion</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="aspAvion">aspAvion	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^aspAvion isNil		ifTrue:			[aspAvion := nil asValue]		ifFalse:			[aspAvion]</body></methods><comment><class-id>VAvion</class-id><body>VAvion has not been commented.  The comment should state the purpose of the class and also explain any unobvious aspects of the implementation.Instance Variables:	agregar	&lt;ValueHolder&gt;	description of agregar	aspAvion	&lt;ValueHolder&gt;	description of aspAvion</body></comment><methods><class-id>VAvion</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonCancelar">botonCancelar	"This stub method was generated by UIDefiner"self closeRequest.</body></methods><methods><class-id>VMenuPrincipal</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAdmVuelos">botonAdmVuelos	| v |	v:= VListaAviones new.	v adm:adm.	v open.</body></methods><methods><class-id>VAvion</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="avion:">avion:unAvion	aspAvion:=unAvion asValue.</body></methods><do-it>vAgregarAvion:= VAvion new.</do-it><do-it>avionPrueba := Avion new.</do-it><do-it>vAgregarAvion:= VAvion new.</do-it><do-it>vAgregarAvion avion: avionPrueba.</do-it><class><name>VAvion</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspAvion agregar asiento </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><class><name>VAvion</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspAvion agregar </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><class><name>VAvion</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspAvion agregar filas </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><class><name>VAvion</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspAvion agregar filas columnas </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>VAvion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="columnas">columnas	^columnas</body></methods><methods><class-id>VAvion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="columnas:">columnas: anObject	columnas := anObject</body></methods><methods><class-id>VAvion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="filas">filas	^filas</body></methods><methods><class-id>VAvion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="filas:">filas: anObject	filas := anObject</body></methods><do-it>vAgregarAvion:= VAvion new.</do-it><do-it>avionPrueba := Avion new.</do-it><do-it>vAgregarAvion avion: avionPrueba.</do-it><remove-selector><class-id>VAvion</class-id> <selector>columnas</selector></remove-selector><remove-selector><class-id>VAvion</class-id> <selector>columnas:</selector></remove-selector><remove-selector><class-id>VAvion</class-id> <selector>filas</selector></remove-selector><remove-selector><class-id>VAvion</class-id> <selector>filas:</selector></remove-selector><do-it>VAvion organization removeCategory: #accessing</do-it><class><name>VAvion</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspAvion agregar columnas </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><class><name>VAvion</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspAvion agregar </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><class><name>Avion</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>id listaAsientos cantidadAsientosOcupados filas </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><class><name>Avion</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>id listaAsientos cantidadAsientosOcupados filas columnas </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="columnas">columnas	^columnas</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="columnas:">columnas: anObject	columnas := anObject</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="filas">filas	^filas</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="filas:">filas: anObject	filas := anObject</body></methods><do-it>vAgregarAvion open.</do-it><do-it>vAgregarAvion open.</do-it><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar| vAvion nuevoAvion |	"This stub method was generated by UIDefiner"vAvion := VAvion new.nuevoAvion := Avion new.vAvion persona: nuevoAvion.vAvion open.vAvion acepto ifTrue: [	adm agregarAvion: nuevoAvion.	self aspListaAviones list:adm personas.	].</body></methods><do-it>vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.</do-it><methods><class-id>VAvion</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="acepto">acepto^agregar value</body></methods><methods><class-id>VAvion</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="avion">avion^aspAvion</body></methods><methods><class-id>VAvion</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAceptar">botonAceptaragregar value: true.	self avion filas 	ifNil: [Dialog warn: 'Debe ingresar la cantidad de filas del avion.'] 	ifNotNil: [		self avion columnas		ifNil:[Dialog warn:'Debe ingresar la cantidad de columnas del avion.']]</body></methods><methods><class-id>VAvion</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAceptar">botonAceptaragregar value: true.	self avion filas 	ifNil: [Dialog warn: 'Debe ingresar la cantidad de filas del avion.'] 	ifNotNil: [		self avion columnas		ifNil:[Dialog warn:'Debe ingresar la cantidad de columnas del avion.']ifNotNil: [agregar value:true]]</body></methods><methods><class-id>VAvion</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAceptar">botonAceptaragregar value: true.	self avion filas 	ifNil: [		agregar value: false.		Dialog warn: 'Debe ingresar la cantidad de filas del avion.'] 	ifNotNil: [		self avion columnas		ifNil:[			agregar value: false.			Dialog warn:'Debe ingresar la cantidad de columnas del avion.']ifNotNil: [agregar value:true]]</body></methods><methods><class-id>VAvion</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAceptar">botonAceptaragregar value: true.	self avion filas 	ifNil: [		Dialog warn: 'Debe ingresar la cantidad de filas del avion.'.			agregar value: false.] 	ifNotNil: [		self avion columnas		ifNil:[			agregar value: false.			Dialog warn:'Debe ingresar la cantidad de columnas del avion.']ifNotNil: [agregar value:true]]</body></methods><methods><class-id>VAvion</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAceptar">botonAceptaragregar value: true.	self avion filas 	ifNil: [		Dialog warn: 'Debe ingresar la cantidad de filas del avion.'.		agregar value: false.] 	ifNotNil: [		self avion columnas		ifNil:[			agregar value: false.			Dialog warn:'Debe ingresar la cantidad de columnas del avion.'.				agregar value: false.]ifNotNil: [agregar value:true]]</body></methods><methods><class-id>VAvion</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAceptar">botonAceptaragregar value: true.	self avion filas 	ifNil: [		Dialog warn: 'Debe ingresar la cantidad de filas del avion.'.		agregar value: false.] 	ifNotNil: [		self avion columnas		ifNil:[			agregar value: false.			Dialog warn:'Debe ingresar la cantidad de columnas del avion.'.			agregar value: false.]		ifNotNil: [agregar value:true]]</body></methods><do-it>vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open. </do-it><methods><class-id>VAvion</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAceptar">botonAceptaragregar value: true.	self avion filas		ifNil: 			[Dialog warn: 'Debe ingresar el DNI de la persona.'.			agregar value: false]		ifNotNil: 			[self avion columnas				ifNil: 					[Dialog warn: 'Debe ingresar el nombre de la persona.'.					agregar value: false]				ifNotNil: 					[agregar value: true.self closeRequest]]</body></methods><methods><class-id>VAvion</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAceptar">botonAceptaragregar value: true.	self avion filas		ifNil: 			[Dialog warn: 'Debe ingresar el DNI de la persona.'.			agregar value: false]		ifNotNil: 			[self avion columnas				ifNil: 					[Dialog warn: 'Debe ingresar el nombre de la persona.'.					agregar value: false]				ifNotNil: 					[agregar value: true.self closeRequest]].</body></methods><methods><class-id>VAvion</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAceptar">botonAceptaragregar value: true.	self avion filas		ifNil: 			[Dialog warn: 'Debe ingresar el DNI de la persona.'.			agregar value: false]		ifNotNil: 			[self avion columnas				ifNil: 					[Dialog warn: 'Debe ingresar el nombre de la persona.'.					agregar value: false]				ifNotNil: 					[agregar value: true.					 self closeRequest]].</body></methods><do-it>
vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><methods><class-id>VAvion</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="avion">avion^aspAvion asValue</body></methods><do-it>
vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><methods><class-id>VAvion</class-id> <category>aspects</category><body package="TP_FINAL_PARADIGMAS" selector="avion">avion^aspAvion value</body></methods><do-it>
vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><do-it>
vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><methods><class-id>VAvion</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAceptar">botonAceptaragregar value: true.	self avion filas		ifNil: 			[Dialog warn: 'Debe ingresar la cantidad de filas.'.			agregar value: false]		ifNotNil: 			[self avion columnas				ifNil: 					[Dialog warn: 'Debe ingresar la cantidad de columnas.'.					agregar value: false]				ifNotNil: 					[agregar value: true.					 self closeRequest]].</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'July 3, 2024' '6:00:13 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 18:00:13 on 3 de julio de 2024."</do-it><do-it>vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar| vAvion nuevoAvion |	"This stub method was generated by UIDefiner"vAvion := VAvion new.nuevoAvion := Avion new.vAvion persona: nuevoAvion.vAvion open.nuevoAvion generarAsientos: nuevoAvion filas y: nuevoAvion columnas.vAvion acepto ifTrue: [	adm agregarAvion: nuevoAvion.	self aspListaAviones list:adm personas.	].</body></methods><do-it>
vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar| vAvion nuevoAvion |	"This stub method was generated by UIDefiner"vAvion := VAvion new.nuevoAvion := Avion new.vAvion persona: nuevoAvion.vAvion open.nuevoAvion generarAsientos: 3 y: 3.vAvion acepto ifTrue: [	adm agregarAvion: nuevoAvion.	self aspListaAviones list:adm personas.	].</body></methods><do-it>
vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar| vAvion nuevoAvion |	"This stub method was generated by UIDefiner"vAvion := VAvion new.nuevoAvion := Avion new.vAvion avion: nuevoAvion.vAvion open.nuevoAvion generarAsientos: 3 y: 3.vAvion acepto ifTrue: [	adm agregarAvion: nuevoAvion.	self aspListaAviones list:adm personas.	].</body></methods><do-it>
vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><do-it>vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  avionPrueba generarAsientos: 3 y: 3.</do-it><do-it>vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><do-it>vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  avionPrueba generarAsientos: 3 y: 3.</do-it><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar| vAvion nuevoAvion |	"This stub method was generated by UIDefiner"vAvion := VAvion new.nuevoAvion := Avion new.vAvion avion: nuevoAvion.vAvion open.nuevoAvion generarAsientos: 3 y: 3."vAvion acepto ifTrue: [	adm agregarAvion: nuevoAvion.	self aspListaAviones list:adm personas.	]."</body></methods><do-it>vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><do-it>avionPrueba filas.</do-it><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar| vAvion nuevoAvion |	"This stub method was generated by UIDefiner"vAvion := VAvion new.nuevoAvion := Avion new.nuevoAvion generarAsientos: 3 y: 3.vAvion avion: nuevoAvion.vAvion open."vAvion acepto ifTrue: [	adm agregarAvion: nuevoAvion.	self aspListaAviones list:adm personas.	]."</body></methods><do-it>vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar| vAvion nuevoAvion |	"This stub method was generated by UIDefiner"vAvion := VAvion new.nuevoAvion := Avion new.vAvion avion: nuevoAvion.vAvion open.nuevoAvion generarAsientos: 3 y: 3."vAvion acepto ifTrue: [	adm agregarAvion: nuevoAvion.	self aspListaAviones list:adm personas.	]."</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="generarAsientos:y:">generarAsientos: cantidadFilas y: cantidadColumnas
    | fila columna asientoId asiento |
    fila := 1.
    [fila &lt;= cantidadFilas] whileTrue: [
        columna := 1.
        [columna &lt;= cantidadColumnas] whileTrue: [
            asientoId := String with: (Character value: (65 + fila - 1)).
            asientoId := asientoId, columna printString.
            asiento := Asiento new.
            asiento id: asientoId.
            asiento tipo: nil.
            self listaAsientos add: asiento.
            columna := columna + 1.
        ].
        fila := fila + 1.
    ].</body></methods><do-it>vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><methods><class-id>VAvion</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAceptar">botonAceptaragregar value: true.	self avion filas		ifNil: 			[Dialog warn: 'Debe ingresar la cantidad de filas.'.			agregar value: false]		ifNotNil: 			[self avion columnas				ifNil: 					[Dialog warn: 'Debe ingresar la cantidad de columnas.'.					agregar value: false]				ifNotNil: 					[agregar value: true.						self avion generarAsientos: 3 y: 3.					 self closeRequest]].</body></methods><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar| vAvion nuevoAvion |	"This stub method was generated by UIDefiner"vAvion := VAvion new.nuevoAvion := Avion new.vAvion avion: nuevoAvion.vAvion open."nuevoAvion generarAsientos: 3 y: 3.""vAvion acepto ifTrue: [	adm agregarAvion: nuevoAvion.	self aspListaAviones list:adm personas.	]."</body></methods><do-it>vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><methods><class-id>VAvion</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAceptar">botonAceptaragregar value: true.	self avion filas		ifNil: 			[Dialog warn: 'Debe ingresar la cantidad de filas.'.			agregar value: false]		ifNotNil: 			[self avion columnas				ifNil: 					[Dialog warn: 'Debe ingresar la cantidad de columnas.'.					agregar value: false]				ifNotNil: 					[agregar value: true.						self avion generarAsientos: self avion filas y: self avion columnas.					 self closeRequest]].</body></methods><do-it>vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'July 3, 2024' '6:12:08 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 18:12:08 on 3 de julio de 2024."</do-it><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar| vAvion nuevoAvion |	"This stub method was generated by UIDefiner"vAvion := VAvion new.nuevoAvion := Avion new.vAvion avion: nuevoAvion.vAvion open.vAvion acepto ifTrue: [	adm agregarAvion: nuevoAvion.	self aspListaAviones list:adm personas.	].</body></methods><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar| vAvion nuevoAvion |	"This stub method was generated by UIDefiner"vAvion := VAvion new.nuevoAvion := Avion new.vAvion avion: nuevoAvion.vAvion open.vAvion acepto ifTrue: [	adm agregarAvion: nuevoAvion.	self aspListaAviones list:adm aviones.	].</body></methods><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar| vAvion nuevoAvion |	"This stub method was generated by UIDefiner"vAvion := VAvion new.nuevoAvion := Avion new.vAvion avion: nuevoAvion.vAvion open.vAvion acepto ifTrue: [	adm agregarAvion: nuevoAvion.	self aspListaAviones list:adm aviones.	].Dialog warn: self aspListaAviones size</body></methods><do-it>vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar| vAvion nuevoAvion |	"This stub method was generated by UIDefiner"vAvion := VAvion new.nuevoAvion := Avion new.vAvion avion: nuevoAvion.vAvion open.vAvion acepto ifTrue: [	adm agregarAvion: nuevoAvion.	self aspListaAviones list:adm aviones.   Dialog warn: self aspListaAviones size	].</body></methods><do-it>vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar| vAvion nuevoAvion |	"This stub method was generated by UIDefiner"vAvion := VAvion new.nuevoAvion := Avion new.   Dialog warn: self aspListaAviones size.vAvion avion: nuevoAvion.vAvion open.vAvion acepto ifTrue: [	adm agregarAvion: nuevoAvion.	self aspListaAviones list:adm aviones.	].</body></methods><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar| vAvion nuevoAvion |	"This stub method was generated by UIDefiner"vAvion := VAvion new.nuevoAvion := Avion new.   Dialog warn: self aspListaAviones size.vAvion avion: nuevoAvion.vAvion open.vAvion acepto ifTrue: [	adm agregarAvion: nuevoAvion.	self aspListaAviones list:adm aviones.	].</body></methods><do-it>vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonAgregar">botonAgregar| vAvion nuevoAvion |	"This stub method was generated by UIDefiner"vAvion := VAvion new.nuevoAvion := Avion new.vAvion avion: nuevoAvion.vAvion open.vAvion acepto ifTrue: [	adm agregarAvion: nuevoAvion.	self aspListaAviones list:adm aviones.	].</body></methods><class><name>VAvion</name><environment>Smalltalk</environment><super>UI.SimpleDialog</super><private>false</private><indexed-type>none</indexed-type><inst-vars>aspAvion agregar </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>TP_FINAL_PARADIGMAS</package></attributes></class><methods><class-id>ADMPasajes</class-id> <category>aviones</category><body package="TP_FINAL_PARADIGMAS" selector="agregarAvion:">agregarAvion:unAvion  (aviones size=0 ) ifTrue: [unAvion id: 1] ifFalse: [unAvion id: aviones last id +1].	aviones add: unAvion</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'July 3, 2024' '6:18:01 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 18:18:01 on 3 de julio de 2024."</do-it><methods><class-id>VListaAviones class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Aviones' 			#bounds: #(#{Graphics.Rectangle} 598 328 1518 728 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 105 0 320 0 157 0 341 0 ) 					#name: #btnAgregar 					#model: #botonAgregar 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 285 0 320 0 337 0 341 0 ) 					#name: #btnEliminar 					#model: #botonEliminar 					#label: 'Eliminar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 195 0 320 0 247 0 341 0 ) 					#name: #btnModificar 					#model: #botonModificar 					#label: 'Modificar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 371 0 320 0 423 0 341 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) 				#(#{UI.DataSetSpec} 					#properties: #(#{UI.PropertyListDictionary} #showHorizontalLines true #allowColumnResizing true #showVerticalLines true #allowColumnReordering false ) 					#layout: #(#{Graphics.LayoutFrame} 88 0 91 0 683 0 287 0 ) 					#name: #Dataset1 					#model: #aspListaAviones 					#columns: #(						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion id' 							#label: 'ID' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #number 							#noScroll: false 							#formatString: '' ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false #allowSorting true ) 							#model: #'aspAvion filas' 							#label: 'FILAS' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #number 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false #allowSorting true ) 							#model: #'aspAvion columnas' 							#label: 'COLUMNAS' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #number 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false #allowSorting true ) 							#model: #'aspAvion listaAsientos' 							#label: 'Lista' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #object 							#noScroll: false 							#formatString: '' ) ) ) ) ) )</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'July 3, 2024' '6:20:38 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 18:20:38 on 3 de julio de 2024."</do-it><methods><class-id>VListaAviones class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Aviones' 			#bounds: #(#{Graphics.Rectangle} 500 320 1420 720 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 105 0 320 0 157 0 341 0 ) 					#name: #btnAgregar 					#model: #botonAgregar 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 285 0 320 0 337 0 341 0 ) 					#name: #btnEliminar 					#model: #botonEliminar 					#label: 'Eliminar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 195 0 320 0 247 0 341 0 ) 					#name: #btnModificar 					#model: #botonModificar 					#label: 'Modificar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 371 0 320 0 423 0 341 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) 				#(#{UI.DataSetSpec} 					#properties: #(#{UI.PropertyListDictionary} #showHorizontalLines true #allowColumnResizing true #showVerticalLines true #allowColumnReordering false ) 					#layout: #(#{Graphics.LayoutFrame} 88 0 91 0 683 0 287 0 ) 					#name: #Dataset1 					#model: #aspListaAviones 					#columns: #(						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion id' 							#label: 'ID' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #number 							#noScroll: false 							#formatString: '' ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion filas' 							#label: 'FILAS' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #number 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion columnas' 							#label: 'COLUMNAS' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #number 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion listaAsientos id' 							#label: 'Lista' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #text 							#noScroll: false 							#formatString: '' ) ) ) ) ) )</body></methods><methods><class-id>VListaAviones class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Aviones' 			#bounds: #(#{Graphics.Rectangle} 500 320 1420 720 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 105 0 320 0 157 0 341 0 ) 					#name: #btnAgregar 					#model: #botonAgregar 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 285 0 320 0 337 0 341 0 ) 					#name: #btnEliminar 					#model: #botonEliminar 					#label: 'Eliminar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 195 0 320 0 247 0 341 0 ) 					#name: #btnModificar 					#model: #botonModificar 					#label: 'Modificar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 371 0 320 0 423 0 341 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) 				#(#{UI.DataSetSpec} 					#properties: #(#{UI.PropertyListDictionary} #showHorizontalLines true #allowColumnResizing true #showVerticalLines true #allowColumnReordering false ) 					#layout: #(#{Graphics.LayoutFrame} 88 0 91 0 683 0 287 0 ) 					#name: #Dataset1 					#model: #aspListaAviones 					#columns: #(						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion id' 							#label: 'ID' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #number 							#noScroll: false 							#formatString: '' ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion filas' 							#label: 'FILAS' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #number 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion columnas' 							#label: 'COLUMNAS' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #number 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion listaAsientos id' 							#label: 'Lista' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#noScroll: false 							#formatString: '' ) ) ) ) ) )</body></methods><methods><class-id>VListaAviones class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Aviones' 			#bounds: #(#{Graphics.Rectangle} 500 320 1420 720 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 105 0 320 0 157 0 341 0 ) 					#name: #btnAgregar 					#model: #botonAgregar 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 285 0 320 0 337 0 341 0 ) 					#name: #btnEliminar 					#model: #botonEliminar 					#label: 'Eliminar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 195 0 320 0 247 0 341 0 ) 					#name: #btnModificar 					#model: #botonModificar 					#label: 'Modificar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 371 0 320 0 423 0 341 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) 				#(#{UI.DataSetSpec} 					#properties: #(#{UI.PropertyListDictionary} #showHorizontalLines true #allowColumnResizing true #showVerticalLines true #allowColumnReordering false ) 					#layout: #(#{Graphics.LayoutFrame} 88 0 91 0 683 0 287 0 ) 					#name: #Dataset1 					#model: #aspListaAviones 					#columns: #(						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion id' 							#label: 'ID' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #number 							#noScroll: false 							#formatString: '' ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion filas' 							#label: 'FILAS' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #number 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion columnas' 							#label: 'COLUMNAS' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #number 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion listaAsientosString' 							#label: 'Lista' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#noScroll: false 							#formatString: '' ) ) ) ) ) )</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="listaAsientosString">listaAsientosString^String streamContents: [:stream |    listaAsientos do: [:asiento |        stream nextPutAll: asiento id printString; nextPut: $ ].].</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="listaAsientosString">listaAsientosString| listaAsientosString |listaAsientosString := String streamContents: [:stream |    listaAsientos do: [:asiento | stream nextPutAll: asiento id asString; nextPut: $ ].    stream skip: 1. "Para eliminar el último espacio"].^listaAsientosString</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="listaAsientosString">listaAsientosString| listaAsientosString stream |stream := WriteStream on: (String new: listaAsientos size * 10). "Estimamos un tamaño inicial"listaAsientos do: [:asiento |    stream nextPutAll: asiento id asString; nextPut: $ ].listaAsientosString := stream contents copyFrom: 1 to: stream position - 1. "Eliminamos el último espacio"^listaAsientosString</body></methods><do-it>avionPrueba listaAsientosString</do-it><do-it>avionPrueba listaAsientosString</do-it><do-it>
vAgregarAvion:= VAvion new.avionPrueba := Avion new.vAgregarAvion avion: avionPrueba.vAgregarAvion open.  </do-it><do-it>avionPrueba listaAsientosString</do-it><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="listaAsientosString">listaAsientosString| listaAsientosString stream |stream := WriteStream on: (String new: listaAsientos size * 10).listaAsientos do: [:asiento |    stream nextPutAll: asiento id asString; nextPut: $ ].listaAsientosString := stream contents copyFrom: 1 to: stream position - 1.^listaAsientosString</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="listaAsientosString">listaAsientosString| listaAsientosString stream |stream := WriteStream on: (String new: listaAsientos size * 10).listaAsientos do: [:asiento |    stream nextPutAll: asiento id asString; nextPut: $ ].listaAsientosString := stream contents copyFrom: 1 to: stream position - 1.^listaAsientosString</body></methods><methods><class-id>VListaAviones class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Aviones' 			#bounds: #(#{Graphics.Rectangle} 500 320 1420 720 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 105 0 320 0 157 0 341 0 ) 					#name: #btnAgregar 					#model: #botonAgregar 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 285 0 320 0 337 0 341 0 ) 					#name: #btnEliminar 					#model: #botonEliminar 					#label: 'Eliminar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 195 0 320 0 247 0 341 0 ) 					#name: #btnModificar 					#model: #botonModificar 					#label: 'Modificar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 371 0 320 0 423 0 341 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) 				#(#{UI.DataSetSpec} 					#properties: #(#{UI.PropertyListDictionary} #showHorizontalLines true #allowColumnResizing true #showVerticalLines true #allowColumnReordering false ) 					#layout: #(#{Graphics.LayoutFrame} 88 0 91 0 683 0 287 0 ) 					#name: #Dataset1 					#model: #aspListaAviones 					#columns: #(						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion id' 							#label: 'ID' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #number 							#noScroll: false 							#formatString: '' ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion filas' 							#label: 'FILAS' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #number 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion columnas' 							#label: 'COLUMNAS' 							#labelIsImage: false 							#width: 80 							#editorType: #InputField 							#type: #number 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion listaAsientosString' 							#label: 'LISTA DE ASIENTOS' 							#labelIsImage: false 							#width: 120 							#editorType: #InputField 							#noScroll: false 							#formatString: '' ) ) ) ) ) )</body></methods><methods><class-id>VListaAviones class</class-id> <category>interface specs</category><body package="TP_FINAL_PARADIGMAS" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Aviones' 			#bounds: #(#{Graphics.Rectangle} 626 331 1546 731 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 105 0 320 0 157 0 341 0 ) 					#name: #btnAgregar 					#model: #botonAgregar 					#label: 'Agregar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 285 0 320 0 337 0 341 0 ) 					#name: #btnEliminar 					#model: #botonEliminar 					#label: 'Eliminar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 195 0 320 0 247 0 341 0 ) 					#name: #btnModificar 					#model: #botonModificar 					#label: 'Modificar' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.LayoutFrame} 371 0 320 0 423 0 341 0 ) 					#name: #btnCancelar 					#model: #botonCancelar 					#label: 'Cancelar' 					#defaultable: true ) 				#(#{UI.DataSetSpec} 					#properties: #(#{UI.PropertyListDictionary} #showHorizontalLines true #allowColumnResizing true #showVerticalLines true #allowColumnReordering false ) 					#layout: #(#{Graphics.LayoutFrame} 88 0 91 0 683 0 287 0 ) 					#name: #Dataset1 					#model: #aspListaAviones 					#columns: #(						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion id' 							#label: 'ID' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#type: #number 							#noScroll: false 							#formatString: '' ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion filas' 							#label: 'FILAS' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#type: #number 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion columnas' 							#label: 'COLUMNAS' 							#labelIsImage: false 							#width: 80 							#rendererType: #Text 							#editorType: #None 							#type: #number 							#noScroll: false ) 						#(#{UI.DataSetColumnSpec} 							#properties: #(#{UI.PropertyListDictionary} #allowSorting true #labelFromApplication false ) 							#model: #'aspAvion listaAsientosString' 							#label: 'LISTA DE ASIENTOS' 							#labelIsImage: false 							#width: 120 							#rendererType: #Text 							#editorType: #None 							#noScroll: false 							#formatString: '' ) ) ) ) ) )</body></methods><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminar">botonEliminarself aspListaAviones selection ifNil:[Dialog warn:'Debe seleccionar un avion']ifNotNil:[	adm eliminarPersona: aspListaAviones selection id.	aspListaAviones list:adm personas.].</body></methods><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminar">botonEliminarself aspListaAviones selection ifNil:[Dialog warn:'Debe seleccionar un avion']ifNotNil:[	adm eliminarPersona: aspListaAviones selection id.	aspListaAviones list:adm aviones.].</body></methods><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminar">botonEliminarself aspListaAviones selection ifNil:[Dialog warn:'Debe seleccionar un avion']ifNotNil:[	adm eliminarAvio: aspListaAviones selection id.	aspListaAviones list:adm aviones.].</body></methods><methods><class-id>ADMPasajes</class-id> <category>aviones</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarAvion:">eliminarAvion: idAvionaviones removeAllSuchThat: [:a|a id = idAvion	]</body></methods><methods><class-id>ADMPasajes</class-id> <category>aviones</category><body package="TP_FINAL_PARADIGMAS" selector="eliminarAvion:">eliminarAvion: idAvionaviones removeAllSuchThat: [:a|a id = idAvion]</body></methods><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonEliminar">botonEliminarself aspListaAviones selection ifNil:[Dialog warn:'Debe seleccionar un avion']ifNotNil:[	adm eliminarAvion: aspListaAviones selection id.	aspListaAviones list:adm aviones.].</body></methods><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonModificar">botonModificar| vAvion|self aspListaAviones selection ifNil:[Dialog warn:'Debe seleccionar un avion']ifNotNil:[	vAvion:= VPersona new.	vAvion avion:self aspListaAviones selection.	vAvion open.	^self].</body></methods><methods><class-id>VListaAviones</class-id> <category>actions</category><body package="TP_FINAL_PARADIGMAS" selector="botonModificar">botonModificar| vAvion|self aspListaAviones selection ifNil:[Dialog warn:'Debe seleccionar un avion']ifNotNil:[	vAvion:= VAvion new.	vAvion avion:self aspListaAviones selection.	vAvion open.	^self].</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="generarAsientos:y:">generarAsientos: cantidadFilas y: cantidadColumnas    | fila columna asientoId asiento listaVacia |	self listaAsientos:nil.    fila := 1.    [fila &lt;= cantidadFilas] whileTrue: [        columna := 1.        [columna &lt;= cantidadColumnas] whileTrue: [            asientoId := String with: (Character value: (65 + fila - 1)).            asientoId := asientoId, columna printString.            asiento := Asiento new.            asiento id: asientoId.            asiento tipo: nil.            self listaAsientos add: asiento.            columna := columna + 1.        ].        fila := fila + 1.    ].</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="generarAsientos:y:">generarAsientos: cantidadFilas y: cantidadColumnas    | fila columna asientoId asiento |	self listaAsientos:nil.    fila := 1.    [fila &lt;= cantidadFilas] whileTrue: [        columna := 1.        [columna &lt;= cantidadColumnas] whileTrue: [            asientoId := String with: (Character value: (65 + fila - 1)).            asientoId := asientoId, columna printString.            asiento := Asiento new.            asiento id: asientoId.            asiento tipo: nil.            self listaAsientos add: asiento.            columna := columna + 1.        ].        fila := fila + 1.    ].</body></methods><methods><class-id>Avion</class-id> <category>accessing</category><body package="TP_FINAL_PARADIGMAS" selector="generarAsientos:y:">generarAsientos: cantidadFilas y: cantidadColumnas    | fila columna asientoId asiento |	self listaAsientos:OrderedCollection new.    fila := 1.    [fila &lt;= cantidadFilas] whileTrue: [        columna := 1.        [columna &lt;= cantidadColumnas] whileTrue: [            asientoId := String with: (Character value: (65 + fila - 1)).            asientoId := asientoId, columna printString.            asiento := Asiento new.            asiento id: asientoId.            asiento tipo: nil.            self listaAsientos add: asiento.            columna := columna + 1.        ].        fila := fila + 1.    ].</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im' 'July 3, 2024' '6:40:09 PM')""An image file c:\Users\santi\OneDrive\Documents\VisualWorks Projects\TP_FINAL_PARADIGMAS\TP_FINAL_PARADIGMAS.im was created at 18:40:09 on 3 de julio de 2024."</do-it>